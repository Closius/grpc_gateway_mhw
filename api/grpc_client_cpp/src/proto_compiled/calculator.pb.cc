// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculator.proto

#include "calculator.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace calculator {
constexpr NewTestSet_response::NewTestSet_response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(0){}
struct NewTestSet_responseDefaultTypeInternal {
  constexpr NewTestSet_responseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NewTestSet_responseDefaultTypeInternal() {}
  union {
    NewTestSet_response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NewTestSet_responseDefaultTypeInternal _NewTestSet_response_default_instance_;
constexpr ChangeSettings_request_Options::ChangeSettings_request_Options(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : field5_rep_str_()
  , field1_str_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , field2_int_(0)
  , field3_float_(0)
  , field4_int_(0){}
struct ChangeSettings_request_OptionsDefaultTypeInternal {
  constexpr ChangeSettings_request_OptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChangeSettings_request_OptionsDefaultTypeInternal() {}
  union {
    ChangeSettings_request_Options _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChangeSettings_request_OptionsDefaultTypeInternal _ChangeSettings_request_Options_default_instance_;
constexpr ChangeSettings_request::ChangeSettings_request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : options_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , identifier_(0){}
struct ChangeSettings_requestDefaultTypeInternal {
  constexpr ChangeSettings_requestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChangeSettings_requestDefaultTypeInternal() {}
  union {
    ChangeSettings_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChangeSettings_requestDefaultTypeInternal _ChangeSettings_request_default_instance_;
constexpr DoMath_request::DoMath_request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : operator__(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , a_(0)
  , b_(0){}
struct DoMath_requestDefaultTypeInternal {
  constexpr DoMath_requestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DoMath_requestDefaultTypeInternal() {}
  union {
    DoMath_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DoMath_requestDefaultTypeInternal _DoMath_request_default_instance_;
constexpr DoMath_response::DoMath_response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(0){}
struct DoMath_responseDefaultTypeInternal {
  constexpr DoMath_responseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DoMath_responseDefaultTypeInternal() {}
  union {
    DoMath_response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DoMath_responseDefaultTypeInternal _DoMath_response_default_instance_;
constexpr ListToDict_request::ListToDict_request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seq_k_str_()
  , seq_v_int_()
  , _seq_v_int_cached_byte_size_(0){}
struct ListToDict_requestDefaultTypeInternal {
  constexpr ListToDict_requestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListToDict_requestDefaultTypeInternal() {}
  union {
    ListToDict_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListToDict_requestDefaultTypeInternal _ListToDict_request_default_instance_;
constexpr ListToDict_response_DictMes::ListToDict_response_DictMes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : k_()
  , v_()
  , _v_cached_byte_size_(0){}
struct ListToDict_response_DictMesDefaultTypeInternal {
  constexpr ListToDict_response_DictMesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListToDict_response_DictMesDefaultTypeInternal() {}
  union {
    ListToDict_response_DictMes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListToDict_response_DictMesDefaultTypeInternal _ListToDict_response_DictMes_default_instance_;
constexpr ListToDict_response::ListToDict_response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(){}
struct ListToDict_responseDefaultTypeInternal {
  constexpr ListToDict_responseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListToDict_responseDefaultTypeInternal() {}
  union {
    ListToDict_response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListToDict_responseDefaultTypeInternal _ListToDict_response_default_instance_;
constexpr DictToList_request_DictMes::DictToList_request_DictMes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : v_()
  , _v_cached_byte_size_(0)
  , k_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DictToList_request_DictMesDefaultTypeInternal {
  constexpr DictToList_request_DictMesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DictToList_request_DictMesDefaultTypeInternal() {}
  union {
    DictToList_request_DictMes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DictToList_request_DictMesDefaultTypeInternal _DictToList_request_DictMes_default_instance_;
constexpr DictToList_request::DictToList_request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dict_smpl_(){}
struct DictToList_requestDefaultTypeInternal {
  constexpr DictToList_requestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DictToList_requestDefaultTypeInternal() {}
  union {
    DictToList_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DictToList_requestDefaultTypeInternal _DictToList_request_default_instance_;
constexpr DictToList_response_DictMes::DictToList_response_DictMes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : v_()
  , _v_cached_byte_size_(0)
  , k_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DictToList_response_DictMesDefaultTypeInternal {
  constexpr DictToList_response_DictMesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DictToList_response_DictMesDefaultTypeInternal() {}
  union {
    DictToList_response_DictMes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DictToList_response_DictMesDefaultTypeInternal _DictToList_response_DictMes_default_instance_;
constexpr DictToList_response::DictToList_response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(){}
struct DictToList_responseDefaultTypeInternal {
  constexpr DictToList_responseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DictToList_responseDefaultTypeInternal() {}
  union {
    DictToList_response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DictToList_responseDefaultTypeInternal _DictToList_response_default_instance_;
constexpr StartLongProcessStreaming_request::StartLongProcessStreaming_request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sequence_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartLongProcessStreaming_requestDefaultTypeInternal {
  constexpr StartLongProcessStreaming_requestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartLongProcessStreaming_requestDefaultTypeInternal() {}
  union {
    StartLongProcessStreaming_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartLongProcessStreaming_requestDefaultTypeInternal _StartLongProcessStreaming_request_default_instance_;
constexpr StartLongProcessStreaming_response::StartLongProcessStreaming_response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartLongProcessStreaming_responseDefaultTypeInternal {
  constexpr StartLongProcessStreaming_responseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartLongProcessStreaming_responseDefaultTypeInternal() {}
  union {
    StartLongProcessStreaming_response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartLongProcessStreaming_responseDefaultTypeInternal _StartLongProcessStreaming_response_default_instance_;
constexpr StopLongProcessStreaming_request::StopLongProcessStreaming_request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : say_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StopLongProcessStreaming_requestDefaultTypeInternal {
  constexpr StopLongProcessStreaming_requestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopLongProcessStreaming_requestDefaultTypeInternal() {}
  union {
    StopLongProcessStreaming_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopLongProcessStreaming_requestDefaultTypeInternal _StopLongProcessStreaming_request_default_instance_;
}  // namespace calculator
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_calculator_2eproto[15];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_calculator_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_calculator_2eproto = nullptr;

const uint32_t TableStruct_calculator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::NewTestSet_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::NewTestSet_response, message_),
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request_Options, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request_Options, field1_str_),
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request_Options, field2_int_),
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request_Options, field3_float_),
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request_Options, field4_int_),
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request_Options, field5_rep_str_),
  ~0u,
  0,
  ~0u,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request, name_),
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request, identifier_),
  PROTOBUF_FIELD_OFFSET(::calculator::ChangeSettings_request, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::DoMath_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::DoMath_request, a_),
  PROTOBUF_FIELD_OFFSET(::calculator::DoMath_request, b_),
  PROTOBUF_FIELD_OFFSET(::calculator::DoMath_request, operator__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::DoMath_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::DoMath_response, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::ListToDict_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::ListToDict_request, seq_k_str_),
  PROTOBUF_FIELD_OFFSET(::calculator::ListToDict_request, seq_v_int_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::ListToDict_response_DictMes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::ListToDict_response_DictMes, k_),
  PROTOBUF_FIELD_OFFSET(::calculator::ListToDict_response_DictMes, v_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::ListToDict_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::ListToDict_response, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_request_DictMes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_request_DictMes, k_),
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_request_DictMes, v_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_request, dict_smpl_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_response_DictMes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_response_DictMes, k_),
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_response_DictMes, v_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::DictToList_response, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::StartLongProcessStreaming_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::StartLongProcessStreaming_request, sequence_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::StartLongProcessStreaming_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::StartLongProcessStreaming_response, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::calculator::StopLongProcessStreaming_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::calculator::StopLongProcessStreaming_request, say_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::calculator::NewTestSet_response)},
  { 7, 18, -1, sizeof(::calculator::ChangeSettings_request_Options)},
  { 23, -1, -1, sizeof(::calculator::ChangeSettings_request)},
  { 32, -1, -1, sizeof(::calculator::DoMath_request)},
  { 41, -1, -1, sizeof(::calculator::DoMath_response)},
  { 48, -1, -1, sizeof(::calculator::ListToDict_request)},
  { 56, -1, -1, sizeof(::calculator::ListToDict_response_DictMes)},
  { 64, -1, -1, sizeof(::calculator::ListToDict_response)},
  { 71, -1, -1, sizeof(::calculator::DictToList_request_DictMes)},
  { 79, -1, -1, sizeof(::calculator::DictToList_request)},
  { 86, -1, -1, sizeof(::calculator::DictToList_response_DictMes)},
  { 94, -1, -1, sizeof(::calculator::DictToList_response)},
  { 101, -1, -1, sizeof(::calculator::StartLongProcessStreaming_request)},
  { 108, -1, -1, sizeof(::calculator::StartLongProcessStreaming_response)},
  { 115, -1, -1, sizeof(::calculator::StopLongProcessStreaming_request)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_NewTestSet_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_ChangeSettings_request_Options_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_ChangeSettings_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_DoMath_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_DoMath_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_ListToDict_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_ListToDict_response_DictMes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_ListToDict_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_DictToList_request_DictMes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_DictToList_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_DictToList_response_DictMes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_DictToList_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_StartLongProcessStreaming_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_StartLongProcessStreaming_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::calculator::_StopLongProcessStreaming_request_default_instance_),
};

const char descriptor_table_protodef_calculator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020calculator.proto\022\ncalculator\032\033google/p"
  "rotobuf/empty.proto\032\034google/api/annotati"
  "ons.proto\032.protoc-gen-openapiv2/options/"
  "annotations.proto\"&\n\023NewTestSet_response"
  "\022\017\n\007message\030\001 \001(\005\"\225\002\n\026ChangeSettings_req"
  "uest\022\014\n\004name\030\001 \001(\t\022\022\n\nidentifier\030\002 \001(\005\022;"
  "\n\007options\030\003 \003(\0132*.calculator.ChangeSetti"
  "ngs_request.Options\032\233\001\n\007Options\022\022\n\nfield"
  "1_str\030\001 \001(\t\022\027\n\nfield2_int\030\002 \001(\005H\000\210\001\001\022\024\n\014"
  "field3_float\030\003 \001(\002\022\027\n\nfield4_int\030\004 \001(\005H\001"
  "\210\001\001\022\026\n\016field5_rep_str\030\005 \003(\tB\r\n\013_field2_i"
  "ntB\r\n\013_field4_int\"8\n\016DoMath_request\022\t\n\001a"
  "\030\001 \001(\002\022\t\n\001b\030\002 \001(\002\022\020\n\010operator\030\003 \001(\t\"\"\n\017D"
  "oMath_response\022\017\n\007message\030\001 \001(\002\":\n\022ListT"
  "oDict_request\022\021\n\tseq_k_str\030\001 \003(\t\022\021\n\tseq_"
  "v_int\030\002 \003(\005\"p\n\023ListToDict_response\0228\n\007me"
  "ssage\030\001 \003(\0132\'.calculator.ListToDict_resp"
  "onse.DictMes\032\037\n\007DictMes\022\t\n\001k\030\001 \003(\t\022\t\n\001v\030"
  "\002 \003(\005\"p\n\022DictToList_request\0229\n\tdict_smpl"
  "\030\001 \003(\0132&.calculator.DictToList_request.D"
  "ictMes\032\037\n\007DictMes\022\t\n\001k\030\001 \001(\t\022\t\n\001v\030\002 \003(\005\""
  "p\n\023DictToList_response\0228\n\007message\030\001 \003(\0132"
  "\'.calculator.DictToList_response.DictMes"
  "\032\037\n\007DictMes\022\t\n\001k\030\001 \001(\t\022\t\n\001v\030\002 \003(\005\"\266\003\n!St"
  "artLongProcessStreaming_request\022\220\003\n\010sequ"
  "ence\030\001 \001(\tB\375\002\222A\371\002J\366\002\"Three Rings for the"
  " Elven-kings under the sky, Seven for th"
  "e Dwarf-lords in their halls of stone, N"
  "ine for Mortal Men doomed to die, One fo"
  "r the Dark Lord on his dark throne In th"
  "e Land of Mordor where the Shadows lie. "
  "One Ring to rule them all, One Ring to f"
  "ind them, One Ring to bring them all, an"
  "d in the darkness bind them, In the Land"
  " of Mordor where the Shadows lie.\"\"5\n\"St"
  "artLongProcessStreaming_response\022\017\n\007mess"
  "age\030\001 \001(\t\"P\n StopLongProcessStreaming_re"
  "quest\022,\n\003say\030\001 \001(\tB\037\222A\034J\032\"YOU SHALL NOT "
  "PAAAAAAAS!\"2\307\007\n\nCalculator\022\342\001\n\nNewTestSe"
  "t\022\026.google.protobuf.Empty\032\037.calculator.N"
  "ewTestSet_response\"\232\001\202\323\344\223\002\024\"\017/api/NewTes"
  "tSet:\001*\222A}\022\034Show the new set of requests"
  "\032]This method increases the counter of t"
  "he Calculator (original software) object"
  " and returns it\022l\n\016ChangeSettings\022\".calc"
  "ulator.ChangeSettings_request\032\026.google.p"
  "rotobuf.Empty\"\036\202\323\344\223\002\030\"\023/api/ChangeSettin"
  "gs:\001*\022Y\n\006DoMath\022\032.calculator.DoMath_requ"
  "est\032\033.calculator.DoMath_response\"\026\202\323\344\223\002\020"
  "\"\013/api/DoMath:\001*\022i\n\nListToDict\022\036.calcula"
  "tor.ListToDict_request\032\037.calculator.List"
  "ToDict_response\"\032\202\323\344\223\002\024\"\017/api/ListToDict"
  ":\001*\022i\n\nDictToList\022\036.calculator.DictToLis"
  "t_request\032\037.calculator.DictToList_respon"
  "se\"\032\202\323\344\223\002\024\"\017/api/DictToList:\001*\022\247\001\n\031Start"
  "LongProcessStreaming\022-.calculator.StartL"
  "ongProcessStreaming_request\032..calculator"
  ".StartLongProcessStreaming_response\")\202\323\344"
  "\223\002#\"\036/api/StartLongProcessStreaming:\001*0\001"
  "\022\212\001\n\030StopLongProcessStreaming\022,.calculat"
  "or.StopLongProcessStreaming_request\032\026.go"
  "ogle.protobuf.Empty\"(\202\323\344\223\002\"\"\035/api/StopLo"
  "ngProcessStreaming:\001*B~Z$url_to_your_git"
  "_repo/grpc_client_web\222AU\022\0052\0031.0*\001\002rI\n!gR"
  "PC-gateway Anton Kavalerov test\022$url_to_"
  "your_git_repo/grpc_client_webb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_calculator_2eproto_deps[3] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_calculator_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_calculator_2eproto = {
  false, false, 2637, descriptor_table_protodef_calculator_2eproto, "calculator.proto", 
  &descriptor_table_calculator_2eproto_once, descriptor_table_calculator_2eproto_deps, 3, 15,
  schemas, file_default_instances, TableStruct_calculator_2eproto::offsets,
  file_level_metadata_calculator_2eproto, file_level_enum_descriptors_calculator_2eproto, file_level_service_descriptors_calculator_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_calculator_2eproto_getter() {
  return &descriptor_table_calculator_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_calculator_2eproto(&descriptor_table_calculator_2eproto);
namespace calculator {

// ===================================================================

class NewTestSet_response::_Internal {
 public:
};

NewTestSet_response::NewTestSet_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.NewTestSet_response)
}
NewTestSet_response::NewTestSet_response(const NewTestSet_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_ = from.message_;
  // @@protoc_insertion_point(copy_constructor:calculator.NewTestSet_response)
}

inline void NewTestSet_response::SharedCtor() {
message_ = 0;
}

NewTestSet_response::~NewTestSet_response() {
  // @@protoc_insertion_point(destructor:calculator.NewTestSet_response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NewTestSet_response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NewTestSet_response::ArenaDtor(void* object) {
  NewTestSet_response* _this = reinterpret_cast< NewTestSet_response* >(object);
  (void)_this;
}
void NewTestSet_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NewTestSet_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewTestSet_response::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.NewTestSet_response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewTestSet_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          message_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewTestSet_response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.NewTestSet_response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 message = 1;
  if (this->_internal_message() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.NewTestSet_response)
  return target;
}

size_t NewTestSet_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.NewTestSet_response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 message = 1;
  if (this->_internal_message() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewTestSet_response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewTestSet_response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewTestSet_response::GetClassData() const { return &_class_data_; }

void NewTestSet_response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewTestSet_response *>(to)->MergeFrom(
      static_cast<const NewTestSet_response &>(from));
}


void NewTestSet_response::MergeFrom(const NewTestSet_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.NewTestSet_response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_message() != 0) {
    _internal_set_message(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewTestSet_response::CopyFrom(const NewTestSet_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.NewTestSet_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewTestSet_response::IsInitialized() const {
  return true;
}

void NewTestSet_response::InternalSwap(NewTestSet_response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(message_, other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NewTestSet_response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[0]);
}

// ===================================================================

class ChangeSettings_request_Options::_Internal {
 public:
  using HasBits = decltype(std::declval<ChangeSettings_request_Options>()._has_bits_);
  static void set_has_field2_int(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_field4_int(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ChangeSettings_request_Options::ChangeSettings_request_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  field5_rep_str_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.ChangeSettings_request.Options)
}
ChangeSettings_request_Options::ChangeSettings_request_Options(const ChangeSettings_request_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      field5_rep_str_(from.field5_rep_str_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field1_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    field1_str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field1_str().empty()) {
    field1_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field1_str(), 
      GetArenaForAllocation());
  }
  ::memcpy(&field2_int_, &from.field2_int_,
    static_cast<size_t>(reinterpret_cast<char*>(&field4_int_) -
    reinterpret_cast<char*>(&field2_int_)) + sizeof(field4_int_));
  // @@protoc_insertion_point(copy_constructor:calculator.ChangeSettings_request.Options)
}

inline void ChangeSettings_request_Options::SharedCtor() {
field1_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  field1_str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&field2_int_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&field4_int_) -
    reinterpret_cast<char*>(&field2_int_)) + sizeof(field4_int_));
}

ChangeSettings_request_Options::~ChangeSettings_request_Options() {
  // @@protoc_insertion_point(destructor:calculator.ChangeSettings_request.Options)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ChangeSettings_request_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  field1_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChangeSettings_request_Options::ArenaDtor(void* object) {
  ChangeSettings_request_Options* _this = reinterpret_cast< ChangeSettings_request_Options* >(object);
  (void)_this;
}
void ChangeSettings_request_Options::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangeSettings_request_Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChangeSettings_request_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.ChangeSettings_request.Options)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field5_rep_str_.Clear();
  field1_str_.ClearToEmpty();
  field2_int_ = 0;
  field3_float_ = 0;
  field4_int_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeSettings_request_Options::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string field1_str = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_field1_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.ChangeSettings_request.Options.field1_str"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 field2_int = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_field2_int(&has_bits);
          field2_int_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float field3_float = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          field3_float_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 field4_int = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_field4_int(&has_bits);
          field4_int_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string field5_rep_str = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_field5_rep_str();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.ChangeSettings_request.Options.field5_rep_str"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeSettings_request_Options::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.ChangeSettings_request.Options)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string field1_str = 1;
  if (!this->_internal_field1_str().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field1_str().data(), static_cast<int>(this->_internal_field1_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.ChangeSettings_request.Options.field1_str");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field1_str(), target);
  }

  // optional int32 field2_int = 2;
  if (_internal_has_field2_int()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_field2_int(), target);
  }

  // float field3_float = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_field3_float = this->_internal_field3_float();
  uint32_t raw_field3_float;
  memcpy(&raw_field3_float, &tmp_field3_float, sizeof(tmp_field3_float));
  if (raw_field3_float != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_field3_float(), target);
  }

  // optional int32 field4_int = 4;
  if (_internal_has_field4_int()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_field4_int(), target);
  }

  // repeated string field5_rep_str = 5;
  for (int i = 0, n = this->_internal_field5_rep_str_size(); i < n; i++) {
    const auto& s = this->_internal_field5_rep_str(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.ChangeSettings_request.Options.field5_rep_str");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.ChangeSettings_request.Options)
  return target;
}

size_t ChangeSettings_request_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.ChangeSettings_request.Options)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string field5_rep_str = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(field5_rep_str_.size());
  for (int i = 0, n = field5_rep_str_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      field5_rep_str_.Get(i));
  }

  // string field1_str = 1;
  if (!this->_internal_field1_str().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field1_str());
  }

  // optional int32 field2_int = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_field2_int());
  }

  // float field3_float = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_field3_float = this->_internal_field3_float();
  uint32_t raw_field3_float;
  memcpy(&raw_field3_float, &tmp_field3_float, sizeof(tmp_field3_float));
  if (raw_field3_float != 0) {
    total_size += 1 + 4;
  }

  // optional int32 field4_int = 4;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_field4_int());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeSettings_request_Options::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ChangeSettings_request_Options::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeSettings_request_Options::GetClassData() const { return &_class_data_; }

void ChangeSettings_request_Options::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ChangeSettings_request_Options *>(to)->MergeFrom(
      static_cast<const ChangeSettings_request_Options &>(from));
}


void ChangeSettings_request_Options::MergeFrom(const ChangeSettings_request_Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.ChangeSettings_request.Options)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  field5_rep_str_.MergeFrom(from.field5_rep_str_);
  if (!from._internal_field1_str().empty()) {
    _internal_set_field1_str(from._internal_field1_str());
  }
  if (from._internal_has_field2_int()) {
    _internal_set_field2_int(from._internal_field2_int());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_field3_float = from._internal_field3_float();
  uint32_t raw_field3_float;
  memcpy(&raw_field3_float, &tmp_field3_float, sizeof(tmp_field3_float));
  if (raw_field3_float != 0) {
    _internal_set_field3_float(from._internal_field3_float());
  }
  if (from._internal_has_field4_int()) {
    _internal_set_field4_int(from._internal_field4_int());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeSettings_request_Options::CopyFrom(const ChangeSettings_request_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.ChangeSettings_request.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeSettings_request_Options::IsInitialized() const {
  return true;
}

void ChangeSettings_request_Options::InternalSwap(ChangeSettings_request_Options* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  field5_rep_str_.InternalSwap(&other->field5_rep_str_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &field1_str_, lhs_arena,
      &other->field1_str_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangeSettings_request_Options, field4_int_)
      + sizeof(ChangeSettings_request_Options::field4_int_)
      - PROTOBUF_FIELD_OFFSET(ChangeSettings_request_Options, field2_int_)>(
          reinterpret_cast<char*>(&field2_int_),
          reinterpret_cast<char*>(&other->field2_int_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeSettings_request_Options::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[1]);
}

// ===================================================================

class ChangeSettings_request::_Internal {
 public:
};

ChangeSettings_request::ChangeSettings_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  options_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.ChangeSettings_request)
}
ChangeSettings_request::ChangeSettings_request(const ChangeSettings_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      options_(from.options_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  identifier_ = from.identifier_;
  // @@protoc_insertion_point(copy_constructor:calculator.ChangeSettings_request)
}

inline void ChangeSettings_request::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
identifier_ = 0;
}

ChangeSettings_request::~ChangeSettings_request() {
  // @@protoc_insertion_point(destructor:calculator.ChangeSettings_request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ChangeSettings_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChangeSettings_request::ArenaDtor(void* object) {
  ChangeSettings_request* _this = reinterpret_cast< ChangeSettings_request* >(object);
  (void)_this;
}
void ChangeSettings_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangeSettings_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChangeSettings_request::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.ChangeSettings_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  options_.Clear();
  name_.ClearToEmpty();
  identifier_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeSettings_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.ChangeSettings_request.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 identifier = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          identifier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .calculator.ChangeSettings_request.Options options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_options(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeSettings_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.ChangeSettings_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.ChangeSettings_request.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 identifier = 2;
  if (this->_internal_identifier() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_identifier(), target);
  }

  // repeated .calculator.ChangeSettings_request.Options options = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_options_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_options(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.ChangeSettings_request)
  return target;
}

size_t ChangeSettings_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.ChangeSettings_request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .calculator.ChangeSettings_request.Options options = 3;
  total_size += 1UL * this->_internal_options_size();
  for (const auto& msg : this->options_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 identifier = 2;
  if (this->_internal_identifier() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_identifier());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeSettings_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ChangeSettings_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeSettings_request::GetClassData() const { return &_class_data_; }

void ChangeSettings_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ChangeSettings_request *>(to)->MergeFrom(
      static_cast<const ChangeSettings_request &>(from));
}


void ChangeSettings_request::MergeFrom(const ChangeSettings_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.ChangeSettings_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  options_.MergeFrom(from.options_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_identifier() != 0) {
    _internal_set_identifier(from._internal_identifier());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeSettings_request::CopyFrom(const ChangeSettings_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.ChangeSettings_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeSettings_request::IsInitialized() const {
  return true;
}

void ChangeSettings_request::InternalSwap(ChangeSettings_request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  options_.InternalSwap(&other->options_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(identifier_, other->identifier_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeSettings_request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[2]);
}

// ===================================================================

class DoMath_request::_Internal {
 public:
};

DoMath_request::DoMath_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.DoMath_request)
}
DoMath_request::DoMath_request(const DoMath_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  operator__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    operator__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operator_().empty()) {
    operator__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_operator_(), 
      GetArenaForAllocation());
  }
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:calculator.DoMath_request)
}

inline void DoMath_request::SharedCtor() {
operator__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  operator__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&a_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
}

DoMath_request::~DoMath_request() {
  // @@protoc_insertion_point(destructor:calculator.DoMath_request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DoMath_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  operator__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DoMath_request::ArenaDtor(void* object) {
  DoMath_request* _this = reinterpret_cast< DoMath_request* >(object);
  (void)_this;
}
void DoMath_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DoMath_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DoMath_request::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.DoMath_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operator__.ClearToEmpty();
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoMath_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float a = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          a_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float b = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          b_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // string operator = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_operator_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.DoMath_request.operator"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoMath_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.DoMath_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float a = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_a = this->_internal_a();
  uint32_t raw_a;
  memcpy(&raw_a, &tmp_a, sizeof(tmp_a));
  if (raw_a != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_a(), target);
  }

  // float b = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_b = this->_internal_b();
  uint32_t raw_b;
  memcpy(&raw_b, &tmp_b, sizeof(tmp_b));
  if (raw_b != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_b(), target);
  }

  // string operator = 3;
  if (!this->_internal_operator_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operator_().data(), static_cast<int>(this->_internal_operator_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.DoMath_request.operator");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_operator_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.DoMath_request)
  return target;
}

size_t DoMath_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.DoMath_request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string operator = 3;
  if (!this->_internal_operator_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operator_());
  }

  // float a = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_a = this->_internal_a();
  uint32_t raw_a;
  memcpy(&raw_a, &tmp_a, sizeof(tmp_a));
  if (raw_a != 0) {
    total_size += 1 + 4;
  }

  // float b = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_b = this->_internal_b();
  uint32_t raw_b;
  memcpy(&raw_b, &tmp_b, sizeof(tmp_b));
  if (raw_b != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoMath_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DoMath_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoMath_request::GetClassData() const { return &_class_data_; }

void DoMath_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DoMath_request *>(to)->MergeFrom(
      static_cast<const DoMath_request &>(from));
}


void DoMath_request::MergeFrom(const DoMath_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.DoMath_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_operator_().empty()) {
    _internal_set_operator_(from._internal_operator_());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_a = from._internal_a();
  uint32_t raw_a;
  memcpy(&raw_a, &tmp_a, sizeof(tmp_a));
  if (raw_a != 0) {
    _internal_set_a(from._internal_a());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_b = from._internal_b();
  uint32_t raw_b;
  memcpy(&raw_b, &tmp_b, sizeof(tmp_b));
  if (raw_b != 0) {
    _internal_set_b(from._internal_b());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoMath_request::CopyFrom(const DoMath_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.DoMath_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoMath_request::IsInitialized() const {
  return true;
}

void DoMath_request::InternalSwap(DoMath_request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &operator__, lhs_arena,
      &other->operator__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DoMath_request, b_)
      + sizeof(DoMath_request::b_)
      - PROTOBUF_FIELD_OFFSET(DoMath_request, a_)>(
          reinterpret_cast<char*>(&a_),
          reinterpret_cast<char*>(&other->a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DoMath_request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[3]);
}

// ===================================================================

class DoMath_response::_Internal {
 public:
};

DoMath_response::DoMath_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.DoMath_response)
}
DoMath_response::DoMath_response(const DoMath_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_ = from.message_;
  // @@protoc_insertion_point(copy_constructor:calculator.DoMath_response)
}

inline void DoMath_response::SharedCtor() {
message_ = 0;
}

DoMath_response::~DoMath_response() {
  // @@protoc_insertion_point(destructor:calculator.DoMath_response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DoMath_response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DoMath_response::ArenaDtor(void* object) {
  DoMath_response* _this = reinterpret_cast< DoMath_response* >(object);
  (void)_this;
}
void DoMath_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DoMath_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DoMath_response::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.DoMath_response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoMath_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          message_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoMath_response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.DoMath_response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float message = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_message = this->_internal_message();
  uint32_t raw_message;
  memcpy(&raw_message, &tmp_message, sizeof(tmp_message));
  if (raw_message != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.DoMath_response)
  return target;
}

size_t DoMath_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.DoMath_response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float message = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_message = this->_internal_message();
  uint32_t raw_message;
  memcpy(&raw_message, &tmp_message, sizeof(tmp_message));
  if (raw_message != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoMath_response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DoMath_response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoMath_response::GetClassData() const { return &_class_data_; }

void DoMath_response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DoMath_response *>(to)->MergeFrom(
      static_cast<const DoMath_response &>(from));
}


void DoMath_response::MergeFrom(const DoMath_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.DoMath_response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_message = from._internal_message();
  uint32_t raw_message;
  memcpy(&raw_message, &tmp_message, sizeof(tmp_message));
  if (raw_message != 0) {
    _internal_set_message(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoMath_response::CopyFrom(const DoMath_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.DoMath_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoMath_response::IsInitialized() const {
  return true;
}

void DoMath_response::InternalSwap(DoMath_response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(message_, other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DoMath_response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[4]);
}

// ===================================================================

class ListToDict_request::_Internal {
 public:
};

ListToDict_request::ListToDict_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  seq_k_str_(arena),
  seq_v_int_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.ListToDict_request)
}
ListToDict_request::ListToDict_request(const ListToDict_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seq_k_str_(from.seq_k_str_),
      seq_v_int_(from.seq_v_int_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:calculator.ListToDict_request)
}

inline void ListToDict_request::SharedCtor() {
}

ListToDict_request::~ListToDict_request() {
  // @@protoc_insertion_point(destructor:calculator.ListToDict_request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListToDict_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListToDict_request::ArenaDtor(void* object) {
  ListToDict_request* _this = reinterpret_cast< ListToDict_request* >(object);
  (void)_this;
}
void ListToDict_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListToDict_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListToDict_request::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.ListToDict_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seq_k_str_.Clear();
  seq_v_int_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListToDict_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string seq_k_str = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_seq_k_str();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.ListToDict_request.seq_k_str"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 seq_v_int = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_seq_v_int(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_seq_v_int(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListToDict_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.ListToDict_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string seq_k_str = 1;
  for (int i = 0, n = this->_internal_seq_k_str_size(); i < n; i++) {
    const auto& s = this->_internal_seq_k_str(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.ListToDict_request.seq_k_str");
    target = stream->WriteString(1, s, target);
  }

  // repeated int32 seq_v_int = 2;
  {
    int byte_size = _seq_v_int_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_seq_v_int(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.ListToDict_request)
  return target;
}

size_t ListToDict_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.ListToDict_request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string seq_k_str = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(seq_k_str_.size());
  for (int i = 0, n = seq_k_str_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      seq_k_str_.Get(i));
  }

  // repeated int32 seq_v_int = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->seq_v_int_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _seq_v_int_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListToDict_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListToDict_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListToDict_request::GetClassData() const { return &_class_data_; }

void ListToDict_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListToDict_request *>(to)->MergeFrom(
      static_cast<const ListToDict_request &>(from));
}


void ListToDict_request::MergeFrom(const ListToDict_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.ListToDict_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  seq_k_str_.MergeFrom(from.seq_k_str_);
  seq_v_int_.MergeFrom(from.seq_v_int_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListToDict_request::CopyFrom(const ListToDict_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.ListToDict_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListToDict_request::IsInitialized() const {
  return true;
}

void ListToDict_request::InternalSwap(ListToDict_request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  seq_k_str_.InternalSwap(&other->seq_k_str_);
  seq_v_int_.InternalSwap(&other->seq_v_int_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListToDict_request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[5]);
}

// ===================================================================

class ListToDict_response_DictMes::_Internal {
 public:
};

ListToDict_response_DictMes::ListToDict_response_DictMes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  k_(arena),
  v_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.ListToDict_response.DictMes)
}
ListToDict_response_DictMes::ListToDict_response_DictMes(const ListToDict_response_DictMes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      k_(from.k_),
      v_(from.v_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:calculator.ListToDict_response.DictMes)
}

inline void ListToDict_response_DictMes::SharedCtor() {
}

ListToDict_response_DictMes::~ListToDict_response_DictMes() {
  // @@protoc_insertion_point(destructor:calculator.ListToDict_response.DictMes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListToDict_response_DictMes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListToDict_response_DictMes::ArenaDtor(void* object) {
  ListToDict_response_DictMes* _this = reinterpret_cast< ListToDict_response_DictMes* >(object);
  (void)_this;
}
void ListToDict_response_DictMes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListToDict_response_DictMes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListToDict_response_DictMes::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.ListToDict_response.DictMes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  v_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListToDict_response_DictMes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string k = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_k();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.ListToDict_response.DictMes.k"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 v = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_v(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_v(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListToDict_response_DictMes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.ListToDict_response.DictMes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->_internal_k_size(); i < n; i++) {
    const auto& s = this->_internal_k(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.ListToDict_response.DictMes.k");
    target = stream->WriteString(1, s, target);
  }

  // repeated int32 v = 2;
  {
    int byte_size = _v_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_v(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.ListToDict_response.DictMes)
  return target;
}

size_t ListToDict_response_DictMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.ListToDict_response.DictMes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string k = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(k_.size());
  for (int i = 0, n = k_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      k_.Get(i));
  }

  // repeated int32 v = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->v_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _v_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListToDict_response_DictMes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListToDict_response_DictMes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListToDict_response_DictMes::GetClassData() const { return &_class_data_; }

void ListToDict_response_DictMes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListToDict_response_DictMes *>(to)->MergeFrom(
      static_cast<const ListToDict_response_DictMes &>(from));
}


void ListToDict_response_DictMes::MergeFrom(const ListToDict_response_DictMes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.ListToDict_response.DictMes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  v_.MergeFrom(from.v_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListToDict_response_DictMes::CopyFrom(const ListToDict_response_DictMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.ListToDict_response.DictMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListToDict_response_DictMes::IsInitialized() const {
  return true;
}

void ListToDict_response_DictMes::InternalSwap(ListToDict_response_DictMes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  k_.InternalSwap(&other->k_);
  v_.InternalSwap(&other->v_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListToDict_response_DictMes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[6]);
}

// ===================================================================

class ListToDict_response::_Internal {
 public:
};

ListToDict_response::ListToDict_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  message_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.ListToDict_response)
}
ListToDict_response::ListToDict_response(const ListToDict_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      message_(from.message_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:calculator.ListToDict_response)
}

inline void ListToDict_response::SharedCtor() {
}

ListToDict_response::~ListToDict_response() {
  // @@protoc_insertion_point(destructor:calculator.ListToDict_response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListToDict_response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListToDict_response::ArenaDtor(void* object) {
  ListToDict_response* _this = reinterpret_cast< ListToDict_response* >(object);
  (void)_this;
}
void ListToDict_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListToDict_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListToDict_response::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.ListToDict_response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListToDict_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .calculator.ListToDict_response.DictMes message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListToDict_response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.ListToDict_response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .calculator.ListToDict_response.DictMes message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_message_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_message(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.ListToDict_response)
  return target;
}

size_t ListToDict_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.ListToDict_response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .calculator.ListToDict_response.DictMes message = 1;
  total_size += 1UL * this->_internal_message_size();
  for (const auto& msg : this->message_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListToDict_response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListToDict_response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListToDict_response::GetClassData() const { return &_class_data_; }

void ListToDict_response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListToDict_response *>(to)->MergeFrom(
      static_cast<const ListToDict_response &>(from));
}


void ListToDict_response::MergeFrom(const ListToDict_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.ListToDict_response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListToDict_response::CopyFrom(const ListToDict_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.ListToDict_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListToDict_response::IsInitialized() const {
  return true;
}

void ListToDict_response::InternalSwap(ListToDict_response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  message_.InternalSwap(&other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListToDict_response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[7]);
}

// ===================================================================

class DictToList_request_DictMes::_Internal {
 public:
};

DictToList_request_DictMes::DictToList_request_DictMes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  v_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.DictToList_request.DictMes)
}
DictToList_request_DictMes::DictToList_request_DictMes(const DictToList_request_DictMes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      v_(from.v_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    k_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_k().empty()) {
    k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:calculator.DictToList_request.DictMes)
}

inline void DictToList_request_DictMes::SharedCtor() {
k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  k_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DictToList_request_DictMes::~DictToList_request_DictMes() {
  // @@protoc_insertion_point(destructor:calculator.DictToList_request.DictMes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DictToList_request_DictMes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  k_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DictToList_request_DictMes::ArenaDtor(void* object) {
  DictToList_request_DictMes* _this = reinterpret_cast< DictToList_request_DictMes* >(object);
  (void)_this;
}
void DictToList_request_DictMes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DictToList_request_DictMes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DictToList_request_DictMes::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.DictToList_request.DictMes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  v_.Clear();
  k_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DictToList_request_DictMes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string k = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_k();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.DictToList_request.DictMes.k"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 v = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_v(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_v(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DictToList_request_DictMes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.DictToList_request.DictMes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string k = 1;
  if (!this->_internal_k().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_k().data(), static_cast<int>(this->_internal_k().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.DictToList_request.DictMes.k");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_k(), target);
  }

  // repeated int32 v = 2;
  {
    int byte_size = _v_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_v(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.DictToList_request.DictMes)
  return target;
}

size_t DictToList_request_DictMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.DictToList_request.DictMes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 v = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->v_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _v_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string k = 1;
  if (!this->_internal_k().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_k());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DictToList_request_DictMes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DictToList_request_DictMes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DictToList_request_DictMes::GetClassData() const { return &_class_data_; }

void DictToList_request_DictMes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DictToList_request_DictMes *>(to)->MergeFrom(
      static_cast<const DictToList_request_DictMes &>(from));
}


void DictToList_request_DictMes::MergeFrom(const DictToList_request_DictMes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.DictToList_request.DictMes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  v_.MergeFrom(from.v_);
  if (!from._internal_k().empty()) {
    _internal_set_k(from._internal_k());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DictToList_request_DictMes::CopyFrom(const DictToList_request_DictMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.DictToList_request.DictMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictToList_request_DictMes::IsInitialized() const {
  return true;
}

void DictToList_request_DictMes::InternalSwap(DictToList_request_DictMes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  v_.InternalSwap(&other->v_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k_, lhs_arena,
      &other->k_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DictToList_request_DictMes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[8]);
}

// ===================================================================

class DictToList_request::_Internal {
 public:
};

DictToList_request::DictToList_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  dict_smpl_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.DictToList_request)
}
DictToList_request::DictToList_request(const DictToList_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      dict_smpl_(from.dict_smpl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:calculator.DictToList_request)
}

inline void DictToList_request::SharedCtor() {
}

DictToList_request::~DictToList_request() {
  // @@protoc_insertion_point(destructor:calculator.DictToList_request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DictToList_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DictToList_request::ArenaDtor(void* object) {
  DictToList_request* _this = reinterpret_cast< DictToList_request* >(object);
  (void)_this;
}
void DictToList_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DictToList_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DictToList_request::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.DictToList_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dict_smpl_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DictToList_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .calculator.DictToList_request.DictMes dict_smpl = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dict_smpl(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DictToList_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.DictToList_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .calculator.DictToList_request.DictMes dict_smpl = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_dict_smpl_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_dict_smpl(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.DictToList_request)
  return target;
}

size_t DictToList_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.DictToList_request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .calculator.DictToList_request.DictMes dict_smpl = 1;
  total_size += 1UL * this->_internal_dict_smpl_size();
  for (const auto& msg : this->dict_smpl_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DictToList_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DictToList_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DictToList_request::GetClassData() const { return &_class_data_; }

void DictToList_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DictToList_request *>(to)->MergeFrom(
      static_cast<const DictToList_request &>(from));
}


void DictToList_request::MergeFrom(const DictToList_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.DictToList_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  dict_smpl_.MergeFrom(from.dict_smpl_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DictToList_request::CopyFrom(const DictToList_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.DictToList_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictToList_request::IsInitialized() const {
  return true;
}

void DictToList_request::InternalSwap(DictToList_request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  dict_smpl_.InternalSwap(&other->dict_smpl_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DictToList_request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[9]);
}

// ===================================================================

class DictToList_response_DictMes::_Internal {
 public:
};

DictToList_response_DictMes::DictToList_response_DictMes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  v_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.DictToList_response.DictMes)
}
DictToList_response_DictMes::DictToList_response_DictMes(const DictToList_response_DictMes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      v_(from.v_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    k_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_k().empty()) {
    k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:calculator.DictToList_response.DictMes)
}

inline void DictToList_response_DictMes::SharedCtor() {
k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  k_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DictToList_response_DictMes::~DictToList_response_DictMes() {
  // @@protoc_insertion_point(destructor:calculator.DictToList_response.DictMes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DictToList_response_DictMes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  k_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DictToList_response_DictMes::ArenaDtor(void* object) {
  DictToList_response_DictMes* _this = reinterpret_cast< DictToList_response_DictMes* >(object);
  (void)_this;
}
void DictToList_response_DictMes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DictToList_response_DictMes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DictToList_response_DictMes::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.DictToList_response.DictMes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  v_.Clear();
  k_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DictToList_response_DictMes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string k = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_k();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.DictToList_response.DictMes.k"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 v = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_v(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_v(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DictToList_response_DictMes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.DictToList_response.DictMes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string k = 1;
  if (!this->_internal_k().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_k().data(), static_cast<int>(this->_internal_k().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.DictToList_response.DictMes.k");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_k(), target);
  }

  // repeated int32 v = 2;
  {
    int byte_size = _v_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_v(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.DictToList_response.DictMes)
  return target;
}

size_t DictToList_response_DictMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.DictToList_response.DictMes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 v = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->v_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _v_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string k = 1;
  if (!this->_internal_k().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_k());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DictToList_response_DictMes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DictToList_response_DictMes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DictToList_response_DictMes::GetClassData() const { return &_class_data_; }

void DictToList_response_DictMes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DictToList_response_DictMes *>(to)->MergeFrom(
      static_cast<const DictToList_response_DictMes &>(from));
}


void DictToList_response_DictMes::MergeFrom(const DictToList_response_DictMes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.DictToList_response.DictMes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  v_.MergeFrom(from.v_);
  if (!from._internal_k().empty()) {
    _internal_set_k(from._internal_k());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DictToList_response_DictMes::CopyFrom(const DictToList_response_DictMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.DictToList_response.DictMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictToList_response_DictMes::IsInitialized() const {
  return true;
}

void DictToList_response_DictMes::InternalSwap(DictToList_response_DictMes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  v_.InternalSwap(&other->v_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k_, lhs_arena,
      &other->k_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DictToList_response_DictMes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[10]);
}

// ===================================================================

class DictToList_response::_Internal {
 public:
};

DictToList_response::DictToList_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  message_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.DictToList_response)
}
DictToList_response::DictToList_response(const DictToList_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      message_(from.message_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:calculator.DictToList_response)
}

inline void DictToList_response::SharedCtor() {
}

DictToList_response::~DictToList_response() {
  // @@protoc_insertion_point(destructor:calculator.DictToList_response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DictToList_response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DictToList_response::ArenaDtor(void* object) {
  DictToList_response* _this = reinterpret_cast< DictToList_response* >(object);
  (void)_this;
}
void DictToList_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DictToList_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DictToList_response::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.DictToList_response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DictToList_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .calculator.DictToList_response.DictMes message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DictToList_response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.DictToList_response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .calculator.DictToList_response.DictMes message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_message_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_message(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.DictToList_response)
  return target;
}

size_t DictToList_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.DictToList_response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .calculator.DictToList_response.DictMes message = 1;
  total_size += 1UL * this->_internal_message_size();
  for (const auto& msg : this->message_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DictToList_response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DictToList_response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DictToList_response::GetClassData() const { return &_class_data_; }

void DictToList_response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DictToList_response *>(to)->MergeFrom(
      static_cast<const DictToList_response &>(from));
}


void DictToList_response::MergeFrom(const DictToList_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.DictToList_response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DictToList_response::CopyFrom(const DictToList_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.DictToList_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictToList_response::IsInitialized() const {
  return true;
}

void DictToList_response::InternalSwap(DictToList_response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  message_.InternalSwap(&other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DictToList_response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[11]);
}

// ===================================================================

class StartLongProcessStreaming_request::_Internal {
 public:
};

StartLongProcessStreaming_request::StartLongProcessStreaming_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.StartLongProcessStreaming_request)
}
StartLongProcessStreaming_request::StartLongProcessStreaming_request(const StartLongProcessStreaming_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sequence_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sequence_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sequence().empty()) {
    sequence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sequence(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:calculator.StartLongProcessStreaming_request)
}

inline void StartLongProcessStreaming_request::SharedCtor() {
sequence_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sequence_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StartLongProcessStreaming_request::~StartLongProcessStreaming_request() {
  // @@protoc_insertion_point(destructor:calculator.StartLongProcessStreaming_request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartLongProcessStreaming_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sequence_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartLongProcessStreaming_request::ArenaDtor(void* object) {
  StartLongProcessStreaming_request* _this = reinterpret_cast< StartLongProcessStreaming_request* >(object);
  (void)_this;
}
void StartLongProcessStreaming_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartLongProcessStreaming_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartLongProcessStreaming_request::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.StartLongProcessStreaming_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sequence_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartLongProcessStreaming_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sequence = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sequence();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.StartLongProcessStreaming_request.sequence"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartLongProcessStreaming_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.StartLongProcessStreaming_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sequence = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!this->_internal_sequence().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sequence().data(), static_cast<int>(this->_internal_sequence().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.StartLongProcessStreaming_request.sequence");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sequence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.StartLongProcessStreaming_request)
  return target;
}

size_t StartLongProcessStreaming_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.StartLongProcessStreaming_request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sequence = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!this->_internal_sequence().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sequence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartLongProcessStreaming_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartLongProcessStreaming_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartLongProcessStreaming_request::GetClassData() const { return &_class_data_; }

void StartLongProcessStreaming_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartLongProcessStreaming_request *>(to)->MergeFrom(
      static_cast<const StartLongProcessStreaming_request &>(from));
}


void StartLongProcessStreaming_request::MergeFrom(const StartLongProcessStreaming_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.StartLongProcessStreaming_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sequence().empty()) {
    _internal_set_sequence(from._internal_sequence());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartLongProcessStreaming_request::CopyFrom(const StartLongProcessStreaming_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.StartLongProcessStreaming_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartLongProcessStreaming_request::IsInitialized() const {
  return true;
}

void StartLongProcessStreaming_request::InternalSwap(StartLongProcessStreaming_request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sequence_, lhs_arena,
      &other->sequence_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartLongProcessStreaming_request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[12]);
}

// ===================================================================

class StartLongProcessStreaming_response::_Internal {
 public:
};

StartLongProcessStreaming_response::StartLongProcessStreaming_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.StartLongProcessStreaming_response)
}
StartLongProcessStreaming_response::StartLongProcessStreaming_response(const StartLongProcessStreaming_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:calculator.StartLongProcessStreaming_response)
}

inline void StartLongProcessStreaming_response::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StartLongProcessStreaming_response::~StartLongProcessStreaming_response() {
  // @@protoc_insertion_point(destructor:calculator.StartLongProcessStreaming_response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartLongProcessStreaming_response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartLongProcessStreaming_response::ArenaDtor(void* object) {
  StartLongProcessStreaming_response* _this = reinterpret_cast< StartLongProcessStreaming_response* >(object);
  (void)_this;
}
void StartLongProcessStreaming_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartLongProcessStreaming_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartLongProcessStreaming_response::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.StartLongProcessStreaming_response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartLongProcessStreaming_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.StartLongProcessStreaming_response.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartLongProcessStreaming_response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.StartLongProcessStreaming_response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.StartLongProcessStreaming_response.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.StartLongProcessStreaming_response)
  return target;
}

size_t StartLongProcessStreaming_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.StartLongProcessStreaming_response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartLongProcessStreaming_response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartLongProcessStreaming_response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartLongProcessStreaming_response::GetClassData() const { return &_class_data_; }

void StartLongProcessStreaming_response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartLongProcessStreaming_response *>(to)->MergeFrom(
      static_cast<const StartLongProcessStreaming_response &>(from));
}


void StartLongProcessStreaming_response::MergeFrom(const StartLongProcessStreaming_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.StartLongProcessStreaming_response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartLongProcessStreaming_response::CopyFrom(const StartLongProcessStreaming_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.StartLongProcessStreaming_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartLongProcessStreaming_response::IsInitialized() const {
  return true;
}

void StartLongProcessStreaming_response::InternalSwap(StartLongProcessStreaming_response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartLongProcessStreaming_response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[13]);
}

// ===================================================================

class StopLongProcessStreaming_request::_Internal {
 public:
};

StopLongProcessStreaming_request::StopLongProcessStreaming_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:calculator.StopLongProcessStreaming_request)
}
StopLongProcessStreaming_request::StopLongProcessStreaming_request(const StopLongProcessStreaming_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  say_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    say_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_say().empty()) {
    say_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_say(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:calculator.StopLongProcessStreaming_request)
}

inline void StopLongProcessStreaming_request::SharedCtor() {
say_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  say_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StopLongProcessStreaming_request::~StopLongProcessStreaming_request() {
  // @@protoc_insertion_point(destructor:calculator.StopLongProcessStreaming_request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StopLongProcessStreaming_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  say_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopLongProcessStreaming_request::ArenaDtor(void* object) {
  StopLongProcessStreaming_request* _this = reinterpret_cast< StopLongProcessStreaming_request* >(object);
  (void)_this;
}
void StopLongProcessStreaming_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopLongProcessStreaming_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopLongProcessStreaming_request::Clear() {
// @@protoc_insertion_point(message_clear_start:calculator.StopLongProcessStreaming_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  say_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopLongProcessStreaming_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string say = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_say();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "calculator.StopLongProcessStreaming_request.say"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopLongProcessStreaming_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:calculator.StopLongProcessStreaming_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string say = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!this->_internal_say().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_say().data(), static_cast<int>(this->_internal_say().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "calculator.StopLongProcessStreaming_request.say");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_say(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calculator.StopLongProcessStreaming_request)
  return target;
}

size_t StopLongProcessStreaming_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calculator.StopLongProcessStreaming_request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string say = 1 [(.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (!this->_internal_say().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_say());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopLongProcessStreaming_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StopLongProcessStreaming_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopLongProcessStreaming_request::GetClassData() const { return &_class_data_; }

void StopLongProcessStreaming_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StopLongProcessStreaming_request *>(to)->MergeFrom(
      static_cast<const StopLongProcessStreaming_request &>(from));
}


void StopLongProcessStreaming_request::MergeFrom(const StopLongProcessStreaming_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calculator.StopLongProcessStreaming_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_say().empty()) {
    _internal_set_say(from._internal_say());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopLongProcessStreaming_request::CopyFrom(const StopLongProcessStreaming_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calculator.StopLongProcessStreaming_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopLongProcessStreaming_request::IsInitialized() const {
  return true;
}

void StopLongProcessStreaming_request::InternalSwap(StopLongProcessStreaming_request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &say_, lhs_arena,
      &other->say_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StopLongProcessStreaming_request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_calculator_2eproto_getter, &descriptor_table_calculator_2eproto_once,
      file_level_metadata_calculator_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace calculator
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::calculator::NewTestSet_response* Arena::CreateMaybeMessage< ::calculator::NewTestSet_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::NewTestSet_response >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::ChangeSettings_request_Options* Arena::CreateMaybeMessage< ::calculator::ChangeSettings_request_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::ChangeSettings_request_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::ChangeSettings_request* Arena::CreateMaybeMessage< ::calculator::ChangeSettings_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::ChangeSettings_request >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::DoMath_request* Arena::CreateMaybeMessage< ::calculator::DoMath_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::DoMath_request >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::DoMath_response* Arena::CreateMaybeMessage< ::calculator::DoMath_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::DoMath_response >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::ListToDict_request* Arena::CreateMaybeMessage< ::calculator::ListToDict_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::ListToDict_request >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::ListToDict_response_DictMes* Arena::CreateMaybeMessage< ::calculator::ListToDict_response_DictMes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::ListToDict_response_DictMes >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::ListToDict_response* Arena::CreateMaybeMessage< ::calculator::ListToDict_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::ListToDict_response >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::DictToList_request_DictMes* Arena::CreateMaybeMessage< ::calculator::DictToList_request_DictMes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::DictToList_request_DictMes >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::DictToList_request* Arena::CreateMaybeMessage< ::calculator::DictToList_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::DictToList_request >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::DictToList_response_DictMes* Arena::CreateMaybeMessage< ::calculator::DictToList_response_DictMes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::DictToList_response_DictMes >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::DictToList_response* Arena::CreateMaybeMessage< ::calculator::DictToList_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::DictToList_response >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::StartLongProcessStreaming_request* Arena::CreateMaybeMessage< ::calculator::StartLongProcessStreaming_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::StartLongProcessStreaming_request >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::StartLongProcessStreaming_response* Arena::CreateMaybeMessage< ::calculator::StartLongProcessStreaming_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::StartLongProcessStreaming_response >(arena);
}
template<> PROTOBUF_NOINLINE ::calculator::StopLongProcessStreaming_request* Arena::CreateMaybeMessage< ::calculator::StopLongProcessStreaming_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::calculator::StopLongProcessStreaming_request >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
