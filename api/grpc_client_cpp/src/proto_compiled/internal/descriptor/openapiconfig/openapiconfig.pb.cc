// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal/descriptor/openapiconfig/openapiconfig.proto

#include "internal/descriptor/openapiconfig/openapiconfig.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc {
namespace gateway {
namespace internal {
namespace descriptor {
namespace openapiconfig {
constexpr OpenAPIFileOption::OpenAPIFileOption(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , option_(nullptr){}
struct OpenAPIFileOptionDefaultTypeInternal {
  constexpr OpenAPIFileOptionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpenAPIFileOptionDefaultTypeInternal() {}
  union {
    OpenAPIFileOption _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OpenAPIFileOptionDefaultTypeInternal _OpenAPIFileOption_default_instance_;
constexpr OpenAPIMethodOption::OpenAPIMethodOption(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : method_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , option_(nullptr){}
struct OpenAPIMethodOptionDefaultTypeInternal {
  constexpr OpenAPIMethodOptionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpenAPIMethodOptionDefaultTypeInternal() {}
  union {
    OpenAPIMethodOption _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OpenAPIMethodOptionDefaultTypeInternal _OpenAPIMethodOption_default_instance_;
constexpr OpenAPIMessageOption::OpenAPIMessageOption(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , option_(nullptr){}
struct OpenAPIMessageOptionDefaultTypeInternal {
  constexpr OpenAPIMessageOptionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpenAPIMessageOptionDefaultTypeInternal() {}
  union {
    OpenAPIMessageOption _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OpenAPIMessageOptionDefaultTypeInternal _OpenAPIMessageOption_default_instance_;
constexpr OpenAPIServiceOption::OpenAPIServiceOption(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : service_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , option_(nullptr){}
struct OpenAPIServiceOptionDefaultTypeInternal {
  constexpr OpenAPIServiceOptionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpenAPIServiceOptionDefaultTypeInternal() {}
  union {
    OpenAPIServiceOption _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OpenAPIServiceOptionDefaultTypeInternal _OpenAPIServiceOption_default_instance_;
constexpr OpenAPIFieldOption::OpenAPIFieldOption(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : field_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , option_(nullptr){}
struct OpenAPIFieldOptionDefaultTypeInternal {
  constexpr OpenAPIFieldOptionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpenAPIFieldOptionDefaultTypeInternal() {}
  union {
    OpenAPIFieldOption _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OpenAPIFieldOptionDefaultTypeInternal _OpenAPIFieldOption_default_instance_;
constexpr OpenAPIOptions::OpenAPIOptions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_()
  , method_()
  , message_()
  , service_()
  , field_(){}
struct OpenAPIOptionsDefaultTypeInternal {
  constexpr OpenAPIOptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpenAPIOptionsDefaultTypeInternal() {}
  union {
    OpenAPIOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OpenAPIOptionsDefaultTypeInternal _OpenAPIOptions_default_instance_;
constexpr OpenAPIConfig::OpenAPIConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : openapi_options_(nullptr){}
struct OpenAPIConfigDefaultTypeInternal {
  constexpr OpenAPIConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OpenAPIConfigDefaultTypeInternal() {}
  union {
    OpenAPIConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OpenAPIConfigDefaultTypeInternal _OpenAPIConfig_default_instance_;
}  // namespace openapiconfig
}  // namespace descriptor
}  // namespace internal
}  // namespace gateway
}  // namespace grpc
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto = nullptr;

const uint32_t TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption, file_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption, option_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption, method_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption, option_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption, message_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption, option_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption, service_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption, option_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption, field_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption, option_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions, file_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions, method_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions, message_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions, service_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions, field_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIConfig, openapi_options_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption)},
  { 8, -1, -1, sizeof(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption)},
  { 16, -1, -1, sizeof(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption)},
  { 24, -1, -1, sizeof(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption)},
  { 32, -1, -1, sizeof(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption)},
  { 40, -1, -1, sizeof(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions)},
  { 51, -1, -1, sizeof(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::internal::descriptor::openapiconfig::_OpenAPIFileOption_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::internal::descriptor::openapiconfig::_OpenAPIMethodOption_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::internal::descriptor::openapiconfig::_OpenAPIMessageOption_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::internal::descriptor::openapiconfig::_OpenAPIServiceOption_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::internal::descriptor::openapiconfig::_OpenAPIFieldOption_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::internal::descriptor::openapiconfig::_OpenAPIOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::internal::descriptor::openapiconfig::_OpenAPIConfig_default_instance_),
};

const char descriptor_table_protodef_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n5internal/descriptor/openapiconfig/open"
  "apiconfig.proto\022.grpc.gateway.internal.d"
  "escriptor.openapiconfig\032,protoc-gen-open"
  "apiv2/options/openapiv2.proto\"e\n\021OpenAPI"
  "FileOption\022\014\n\004file\030\001 \001(\t\022B\n\006option\030\002 \001(\013"
  "22.grpc.gateway.protoc_gen_openapiv2.opt"
  "ions.Swagger\"k\n\023OpenAPIMethodOption\022\016\n\006m"
  "ethod\030\001 \001(\t\022D\n\006option\030\002 \001(\01324.grpc.gatew"
  "ay.protoc_gen_openapiv2.options.Operatio"
  "n\"j\n\024OpenAPIMessageOption\022\017\n\007message\030\001 \001"
  "(\t\022A\n\006option\030\002 \001(\01321.grpc.gateway.protoc"
  "_gen_openapiv2.options.Schema\"g\n\024OpenAPI"
  "ServiceOption\022\017\n\007service\030\001 \001(\t\022>\n\006option"
  "\030\002 \001(\0132..grpc.gateway.protoc_gen_openapi"
  "v2.options.Tag\"j\n\022OpenAPIFieldOption\022\r\n\005"
  "field\030\001 \001(\t\022E\n\006option\030\002 \001(\01325.grpc.gatew"
  "ay.protoc_gen_openapiv2.options.JSONSche"
  "ma\"\267\003\n\016OpenAPIOptions\022O\n\004file\030\001 \003(\0132A.gr"
  "pc.gateway.internal.descriptor.openapico"
  "nfig.OpenAPIFileOption\022S\n\006method\030\002 \003(\0132C"
  ".grpc.gateway.internal.descriptor.openap"
  "iconfig.OpenAPIMethodOption\022U\n\007message\030\003"
  " \003(\0132D.grpc.gateway.internal.descriptor."
  "openapiconfig.OpenAPIMessageOption\022U\n\007se"
  "rvice\030\004 \003(\0132D.grpc.gateway.internal.desc"
  "riptor.openapiconfig.OpenAPIServiceOptio"
  "n\022Q\n\005field\030\005 \003(\0132B.grpc.gateway.internal"
  ".descriptor.openapiconfig.OpenAPIFieldOp"
  "tion\"h\n\rOpenAPIConfig\022W\n\017openapi_options"
  "\030\001 \001(\0132>.grpc.gateway.internal.descripto"
  "r.openapiconfig.OpenAPIOptionsBMZKgithub"
  ".com/grpc-ecosystem/grpc-gateway/v2/inte"
  "rnal/descriptor/openapiconfigb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_deps[1] = {
  &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto = {
  false, false, 1317, descriptor_table_protodef_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto, "internal/descriptor/openapiconfig/openapiconfig.proto", 
  &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once, descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_deps, 1, 7,
  schemas, file_default_instances, TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto::offsets,
  file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto, file_level_enum_descriptors_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto, file_level_service_descriptors_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_getter() {
  return &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto(&descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto);
namespace grpc {
namespace gateway {
namespace internal {
namespace descriptor {
namespace openapiconfig {

// ===================================================================

class OpenAPIFileOption::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Swagger& option(const OpenAPIFileOption* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Swagger&
OpenAPIFileOption::_Internal::option(const OpenAPIFileOption* msg) {
  return *msg->option_;
}
void OpenAPIFileOption::clear_option() {
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
}
OpenAPIFileOption::OpenAPIFileOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
}
OpenAPIFileOption::OpenAPIFileOption(const OpenAPIFileOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    file_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file().empty()) {
    file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_option()) {
    option_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Swagger(*from.option_);
  } else {
    option_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
}

inline void OpenAPIFileOption::SharedCtor() {
file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  file_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
option_ = nullptr;
}

OpenAPIFileOption::~OpenAPIFileOption() {
  // @@protoc_insertion_point(destructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OpenAPIFileOption::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete option_;
}

void OpenAPIFileOption::ArenaDtor(void* object) {
  OpenAPIFileOption* _this = reinterpret_cast< OpenAPIFileOption* >(object);
  (void)_this;
}
void OpenAPIFileOption::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenAPIFileOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OpenAPIFileOption::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenAPIFileOption::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.file"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Swagger option = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_option(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenAPIFileOption::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Swagger option = 2;
  if (this->_internal_has_option()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::option(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
  return target;
}

size_t OpenAPIFileOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (!this->_internal_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Swagger option = 2;
  if (this->_internal_has_option()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *option_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenAPIFileOption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OpenAPIFileOption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenAPIFileOption::GetClassData() const { return &_class_data_; }

void OpenAPIFileOption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OpenAPIFileOption *>(to)->MergeFrom(
      static_cast<const OpenAPIFileOption &>(from));
}


void OpenAPIFileOption::MergeFrom(const OpenAPIFileOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file().empty()) {
    _internal_set_file(from._internal_file());
  }
  if (from._internal_has_option()) {
    _internal_mutable_option()->::grpc::gateway::protoc_gen_openapiv2::options::Swagger::MergeFrom(from._internal_option());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenAPIFileOption::CopyFrom(const OpenAPIFileOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenAPIFileOption::IsInitialized() const {
  return true;
}

void OpenAPIFileOption::InternalSwap(OpenAPIFileOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &file_, lhs_arena,
      &other->file_, rhs_arena
  );
  swap(option_, other->option_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenAPIFileOption::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_getter, &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once,
      file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[0]);
}

// ===================================================================

class OpenAPIMethodOption::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Operation& option(const OpenAPIMethodOption* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Operation&
OpenAPIMethodOption::_Internal::option(const OpenAPIMethodOption* msg) {
  return *msg->option_;
}
void OpenAPIMethodOption::clear_option() {
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
}
OpenAPIMethodOption::OpenAPIMethodOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
}
OpenAPIMethodOption::OpenAPIMethodOption(const OpenAPIMethodOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_method().empty()) {
    method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_method(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_option()) {
    option_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Operation(*from.option_);
  } else {
    option_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
}

inline void OpenAPIMethodOption::SharedCtor() {
method_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
option_ = nullptr;
}

OpenAPIMethodOption::~OpenAPIMethodOption() {
  // @@protoc_insertion_point(destructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OpenAPIMethodOption::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  method_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete option_;
}

void OpenAPIMethodOption::ArenaDtor(void* object) {
  OpenAPIMethodOption* _this = reinterpret_cast< OpenAPIMethodOption* >(object);
  (void)_this;
}
void OpenAPIMethodOption::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenAPIMethodOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OpenAPIMethodOption::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenAPIMethodOption::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string method = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_method();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.method"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Operation option = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_option(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenAPIMethodOption::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (!this->_internal_method().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.method");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Operation option = 2;
  if (this->_internal_has_option()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::option(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
  return target;
}

size_t OpenAPIMethodOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method = 1;
  if (!this->_internal_method().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Operation option = 2;
  if (this->_internal_has_option()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *option_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenAPIMethodOption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OpenAPIMethodOption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenAPIMethodOption::GetClassData() const { return &_class_data_; }

void OpenAPIMethodOption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OpenAPIMethodOption *>(to)->MergeFrom(
      static_cast<const OpenAPIMethodOption &>(from));
}


void OpenAPIMethodOption::MergeFrom(const OpenAPIMethodOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_method().empty()) {
    _internal_set_method(from._internal_method());
  }
  if (from._internal_has_option()) {
    _internal_mutable_option()->::grpc::gateway::protoc_gen_openapiv2::options::Operation::MergeFrom(from._internal_option());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenAPIMethodOption::CopyFrom(const OpenAPIMethodOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenAPIMethodOption::IsInitialized() const {
  return true;
}

void OpenAPIMethodOption::InternalSwap(OpenAPIMethodOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &method_, lhs_arena,
      &other->method_, rhs_arena
  );
  swap(option_, other->option_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenAPIMethodOption::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_getter, &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once,
      file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[1]);
}

// ===================================================================

class OpenAPIMessageOption::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Schema& option(const OpenAPIMessageOption* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Schema&
OpenAPIMessageOption::_Internal::option(const OpenAPIMessageOption* msg) {
  return *msg->option_;
}
void OpenAPIMessageOption::clear_option() {
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
}
OpenAPIMessageOption::OpenAPIMessageOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
}
OpenAPIMessageOption::OpenAPIMessageOption(const OpenAPIMessageOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_option()) {
    option_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Schema(*from.option_);
  } else {
    option_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
}

inline void OpenAPIMessageOption::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
option_ = nullptr;
}

OpenAPIMessageOption::~OpenAPIMessageOption() {
  // @@protoc_insertion_point(destructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OpenAPIMessageOption::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete option_;
}

void OpenAPIMessageOption::ArenaDtor(void* object) {
  OpenAPIMessageOption* _this = reinterpret_cast< OpenAPIMessageOption* >(object);
  (void)_this;
}
void OpenAPIMessageOption::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenAPIMessageOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OpenAPIMessageOption::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenAPIMessageOption::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Schema option = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_option(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenAPIMessageOption::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Schema option = 2;
  if (this->_internal_has_option()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::option(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
  return target;
}

size_t OpenAPIMessageOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Schema option = 2;
  if (this->_internal_has_option()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *option_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenAPIMessageOption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OpenAPIMessageOption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenAPIMessageOption::GetClassData() const { return &_class_data_; }

void OpenAPIMessageOption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OpenAPIMessageOption *>(to)->MergeFrom(
      static_cast<const OpenAPIMessageOption &>(from));
}


void OpenAPIMessageOption::MergeFrom(const OpenAPIMessageOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_has_option()) {
    _internal_mutable_option()->::grpc::gateway::protoc_gen_openapiv2::options::Schema::MergeFrom(from._internal_option());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenAPIMessageOption::CopyFrom(const OpenAPIMessageOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenAPIMessageOption::IsInitialized() const {
  return true;
}

void OpenAPIMessageOption::InternalSwap(OpenAPIMessageOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(option_, other->option_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenAPIMessageOption::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_getter, &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once,
      file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[2]);
}

// ===================================================================

class OpenAPIServiceOption::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Tag& option(const OpenAPIServiceOption* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Tag&
OpenAPIServiceOption::_Internal::option(const OpenAPIServiceOption* msg) {
  return *msg->option_;
}
void OpenAPIServiceOption::clear_option() {
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
}
OpenAPIServiceOption::OpenAPIServiceOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
}
OpenAPIServiceOption::OpenAPIServiceOption(const OpenAPIServiceOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    service_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service().empty()) {
    service_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_service(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_option()) {
    option_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Tag(*from.option_);
  } else {
    option_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
}

inline void OpenAPIServiceOption::SharedCtor() {
service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  service_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
option_ = nullptr;
}

OpenAPIServiceOption::~OpenAPIServiceOption() {
  // @@protoc_insertion_point(destructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OpenAPIServiceOption::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  service_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete option_;
}

void OpenAPIServiceOption::ArenaDtor(void* object) {
  OpenAPIServiceOption* _this = reinterpret_cast< OpenAPIServiceOption* >(object);
  (void)_this;
}
void OpenAPIServiceOption::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenAPIServiceOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OpenAPIServiceOption::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenAPIServiceOption::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_service();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.service"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Tag option = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_option(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenAPIServiceOption::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (!this->_internal_service().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service().data(), static_cast<int>(this->_internal_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.service");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Tag option = 2;
  if (this->_internal_has_option()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::option(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
  return target;
}

size_t OpenAPIServiceOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service = 1;
  if (!this->_internal_service().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Tag option = 2;
  if (this->_internal_has_option()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *option_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenAPIServiceOption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OpenAPIServiceOption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenAPIServiceOption::GetClassData() const { return &_class_data_; }

void OpenAPIServiceOption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OpenAPIServiceOption *>(to)->MergeFrom(
      static_cast<const OpenAPIServiceOption &>(from));
}


void OpenAPIServiceOption::MergeFrom(const OpenAPIServiceOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service().empty()) {
    _internal_set_service(from._internal_service());
  }
  if (from._internal_has_option()) {
    _internal_mutable_option()->::grpc::gateway::protoc_gen_openapiv2::options::Tag::MergeFrom(from._internal_option());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenAPIServiceOption::CopyFrom(const OpenAPIServiceOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenAPIServiceOption::IsInitialized() const {
  return true;
}

void OpenAPIServiceOption::InternalSwap(OpenAPIServiceOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &service_, lhs_arena,
      &other->service_, rhs_arena
  );
  swap(option_, other->option_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenAPIServiceOption::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_getter, &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once,
      file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[3]);
}

// ===================================================================

class OpenAPIFieldOption::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema& option(const OpenAPIFieldOption* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema&
OpenAPIFieldOption::_Internal::option(const OpenAPIFieldOption* msg) {
  return *msg->option_;
}
void OpenAPIFieldOption::clear_option() {
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
}
OpenAPIFieldOption::OpenAPIFieldOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
}
OpenAPIFieldOption::OpenAPIFieldOption(const OpenAPIFieldOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field().empty()) {
    field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_option()) {
    option_ = new ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema(*from.option_);
  } else {
    option_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
}

inline void OpenAPIFieldOption::SharedCtor() {
field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
option_ = nullptr;
}

OpenAPIFieldOption::~OpenAPIFieldOption() {
  // @@protoc_insertion_point(destructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OpenAPIFieldOption::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete option_;
}

void OpenAPIFieldOption::ArenaDtor(void* object) {
  OpenAPIFieldOption* _this = reinterpret_cast< OpenAPIFieldOption* >(object);
  (void)_this;
}
void OpenAPIFieldOption::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenAPIFieldOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OpenAPIFieldOption::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && option_ != nullptr) {
    delete option_;
  }
  option_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenAPIFieldOption::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.field"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema option = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_option(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenAPIFieldOption::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema option = 2;
  if (this->_internal_has_option()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::option(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
  return target;
}

size_t OpenAPIFieldOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema option = 2;
  if (this->_internal_has_option()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *option_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenAPIFieldOption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OpenAPIFieldOption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenAPIFieldOption::GetClassData() const { return &_class_data_; }

void OpenAPIFieldOption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OpenAPIFieldOption *>(to)->MergeFrom(
      static_cast<const OpenAPIFieldOption &>(from));
}


void OpenAPIFieldOption::MergeFrom(const OpenAPIFieldOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field().empty()) {
    _internal_set_field(from._internal_field());
  }
  if (from._internal_has_option()) {
    _internal_mutable_option()->::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema::MergeFrom(from._internal_option());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenAPIFieldOption::CopyFrom(const OpenAPIFieldOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenAPIFieldOption::IsInitialized() const {
  return true;
}

void OpenAPIFieldOption::InternalSwap(OpenAPIFieldOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &field_, lhs_arena,
      &other->field_, rhs_arena
  );
  swap(option_, other->option_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenAPIFieldOption::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_getter, &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once,
      file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[4]);
}

// ===================================================================

class OpenAPIOptions::_Internal {
 public:
};

OpenAPIOptions::OpenAPIOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  file_(arena),
  method_(arena),
  message_(arena),
  service_(arena),
  field_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
}
OpenAPIOptions::OpenAPIOptions(const OpenAPIOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      file_(from.file_),
      method_(from.method_),
      message_(from.message_),
      service_(from.service_),
      field_(from.field_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
}

inline void OpenAPIOptions::SharedCtor() {
}

OpenAPIOptions::~OpenAPIOptions() {
  // @@protoc_insertion_point(destructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OpenAPIOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OpenAPIOptions::ArenaDtor(void* object) {
  OpenAPIOptions* _this = reinterpret_cast< OpenAPIOptions* >(object);
  (void)_this;
}
void OpenAPIOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenAPIOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OpenAPIOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.Clear();
  method_.Clear();
  message_.Clear();
  service_.Clear();
  field_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenAPIOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_file(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_method(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption service = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption field = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_field(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenAPIOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption file = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_file_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_file(i), target, stream);
  }

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption method = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_method_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_method(i), target, stream);
  }

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption message = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_message_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_message(i), target, stream);
  }

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption service = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_service_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_service(i), target, stream);
  }

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption field = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_field_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_field(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
  return target;
}

size_t OpenAPIOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption file = 1;
  total_size += 1UL * this->_internal_file_size();
  for (const auto& msg : this->file_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption method = 2;
  total_size += 1UL * this->_internal_method_size();
  for (const auto& msg : this->method_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption message = 3;
  total_size += 1UL * this->_internal_message_size();
  for (const auto& msg : this->message_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption service = 4;
  total_size += 1UL * this->_internal_service_size();
  for (const auto& msg : this->service_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption field = 5;
  total_size += 1UL * this->_internal_field_size();
  for (const auto& msg : this->field_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenAPIOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OpenAPIOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenAPIOptions::GetClassData() const { return &_class_data_; }

void OpenAPIOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OpenAPIOptions *>(to)->MergeFrom(
      static_cast<const OpenAPIOptions &>(from));
}


void OpenAPIOptions::MergeFrom(const OpenAPIOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  file_.MergeFrom(from.file_);
  method_.MergeFrom(from.method_);
  message_.MergeFrom(from.message_);
  service_.MergeFrom(from.service_);
  field_.MergeFrom(from.field_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenAPIOptions::CopyFrom(const OpenAPIOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenAPIOptions::IsInitialized() const {
  return true;
}

void OpenAPIOptions::InternalSwap(OpenAPIOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  file_.InternalSwap(&other->file_);
  method_.InternalSwap(&other->method_);
  message_.InternalSwap(&other->message_);
  service_.InternalSwap(&other->service_);
  field_.InternalSwap(&other->field_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenAPIOptions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_getter, &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once,
      file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[5]);
}

// ===================================================================

class OpenAPIConfig::_Internal {
 public:
  static const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions& openapi_options(const OpenAPIConfig* msg);
};

const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions&
OpenAPIConfig::_Internal::openapi_options(const OpenAPIConfig* msg) {
  return *msg->openapi_options_;
}
OpenAPIConfig::OpenAPIConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
}
OpenAPIConfig::OpenAPIConfig(const OpenAPIConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_openapi_options()) {
    openapi_options_ = new ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions(*from.openapi_options_);
  } else {
    openapi_options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
}

inline void OpenAPIConfig::SharedCtor() {
openapi_options_ = nullptr;
}

OpenAPIConfig::~OpenAPIConfig() {
  // @@protoc_insertion_point(destructor:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OpenAPIConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete openapi_options_;
}

void OpenAPIConfig::ArenaDtor(void* object) {
  OpenAPIConfig* _this = reinterpret_cast< OpenAPIConfig* >(object);
  (void)_this;
}
void OpenAPIConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenAPIConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OpenAPIConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && openapi_options_ != nullptr) {
    delete openapi_options_;
  }
  openapi_options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenAPIConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions openapi_options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_openapi_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenAPIConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions openapi_options = 1;
  if (this->_internal_has_openapi_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::openapi_options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
  return target;
}

size_t OpenAPIConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions openapi_options = 1;
  if (this->_internal_has_openapi_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *openapi_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenAPIConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OpenAPIConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenAPIConfig::GetClassData() const { return &_class_data_; }

void OpenAPIConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OpenAPIConfig *>(to)->MergeFrom(
      static_cast<const OpenAPIConfig &>(from));
}


void OpenAPIConfig::MergeFrom(const OpenAPIConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_openapi_options()) {
    _internal_mutable_openapi_options()->::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions::MergeFrom(from._internal_openapi_options());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenAPIConfig::CopyFrom(const OpenAPIConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenAPIConfig::IsInitialized() const {
  return true;
}

void OpenAPIConfig::InternalSwap(OpenAPIConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(openapi_options_, other->openapi_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenAPIConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_getter, &descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto_once,
      file_level_metadata_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace openapiconfig
}  // namespace descriptor
}  // namespace internal
}  // namespace gateway
}  // namespace grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* Arena::CreateMaybeMessage< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* Arena::CreateMaybeMessage< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* Arena::CreateMaybeMessage< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* Arena::CreateMaybeMessage< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* Arena::CreateMaybeMessage< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* Arena::CreateMaybeMessage< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIConfig* Arena::CreateMaybeMessage< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
