// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal/descriptor/openapiconfig/openapiconfig.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "protoc-gen-openapiv2/options/openapiv2.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
namespace grpc {
namespace gateway {
namespace internal {
namespace descriptor {
namespace openapiconfig {
class OpenAPIConfig;
struct OpenAPIConfigDefaultTypeInternal;
extern OpenAPIConfigDefaultTypeInternal _OpenAPIConfig_default_instance_;
class OpenAPIFieldOption;
struct OpenAPIFieldOptionDefaultTypeInternal;
extern OpenAPIFieldOptionDefaultTypeInternal _OpenAPIFieldOption_default_instance_;
class OpenAPIFileOption;
struct OpenAPIFileOptionDefaultTypeInternal;
extern OpenAPIFileOptionDefaultTypeInternal _OpenAPIFileOption_default_instance_;
class OpenAPIMessageOption;
struct OpenAPIMessageOptionDefaultTypeInternal;
extern OpenAPIMessageOptionDefaultTypeInternal _OpenAPIMessageOption_default_instance_;
class OpenAPIMethodOption;
struct OpenAPIMethodOptionDefaultTypeInternal;
extern OpenAPIMethodOptionDefaultTypeInternal _OpenAPIMethodOption_default_instance_;
class OpenAPIOptions;
struct OpenAPIOptionsDefaultTypeInternal;
extern OpenAPIOptionsDefaultTypeInternal _OpenAPIOptions_default_instance_;
class OpenAPIServiceOption;
struct OpenAPIServiceOptionDefaultTypeInternal;
extern OpenAPIServiceOptionDefaultTypeInternal _OpenAPIServiceOption_default_instance_;
}  // namespace openapiconfig
}  // namespace descriptor
}  // namespace internal
}  // namespace gateway
}  // namespace grpc
PROTOBUF_NAMESPACE_OPEN
template<> ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIConfig* Arena::CreateMaybeMessage<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIConfig>(Arena*);
template<> ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* Arena::CreateMaybeMessage<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption>(Arena*);
template<> ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* Arena::CreateMaybeMessage<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption>(Arena*);
template<> ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* Arena::CreateMaybeMessage<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption>(Arena*);
template<> ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* Arena::CreateMaybeMessage<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption>(Arena*);
template<> ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* Arena::CreateMaybeMessage<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions>(Arena*);
template<> ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* Arena::CreateMaybeMessage<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpc {
namespace gateway {
namespace internal {
namespace descriptor {
namespace openapiconfig {

// ===================================================================

class OpenAPIFileOption final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption) */ {
 public:
  inline OpenAPIFileOption() : OpenAPIFileOption(nullptr) {}
  ~OpenAPIFileOption() override;
  explicit constexpr OpenAPIFileOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpenAPIFileOption(const OpenAPIFileOption& from);
  OpenAPIFileOption(OpenAPIFileOption&& from) noexcept
    : OpenAPIFileOption() {
    *this = ::std::move(from);
  }

  inline OpenAPIFileOption& operator=(const OpenAPIFileOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenAPIFileOption& operator=(OpenAPIFileOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenAPIFileOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpenAPIFileOption* internal_default_instance() {
    return reinterpret_cast<const OpenAPIFileOption*>(
               &_OpenAPIFileOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OpenAPIFileOption& a, OpenAPIFileOption& b) {
    a.Swap(&b);
  }
  inline void Swap(OpenAPIFileOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenAPIFileOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenAPIFileOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OpenAPIFileOption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OpenAPIFileOption& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OpenAPIFileOption& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenAPIFileOption* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption";
  }
  protected:
  explicit OpenAPIFileOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFieldNumber = 1,
    kOptionFieldNumber = 2,
  };
  // string file = 1;
  void clear_file();
  const std::string& file() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_file(ArgT0&& arg0, ArgT... args);
  std::string* mutable_file();
  PROTOBUF_NODISCARD std::string* release_file();
  void set_allocated_file(std::string* file);
  private:
  const std::string& _internal_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file(const std::string& value);
  std::string* _internal_mutable_file();
  public:

  // .grpc.gateway.protoc_gen_openapiv2.options.Swagger option = 2;
  bool has_option() const;
  private:
  bool _internal_has_option() const;
  public:
  void clear_option();
  const ::grpc::gateway::protoc_gen_openapiv2::options::Swagger& option() const;
  PROTOBUF_NODISCARD ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* release_option();
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* mutable_option();
  void set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::Swagger* option);
  private:
  const ::grpc::gateway::protoc_gen_openapiv2::options::Swagger& _internal_option() const;
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* _internal_mutable_option();
  public:
  void unsafe_arena_set_allocated_option(
      ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* option);
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* unsafe_arena_release_option();

  // @@protoc_insertion_point(class_scope:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_;
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* option_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
};
// -------------------------------------------------------------------

class OpenAPIMethodOption final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption) */ {
 public:
  inline OpenAPIMethodOption() : OpenAPIMethodOption(nullptr) {}
  ~OpenAPIMethodOption() override;
  explicit constexpr OpenAPIMethodOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpenAPIMethodOption(const OpenAPIMethodOption& from);
  OpenAPIMethodOption(OpenAPIMethodOption&& from) noexcept
    : OpenAPIMethodOption() {
    *this = ::std::move(from);
  }

  inline OpenAPIMethodOption& operator=(const OpenAPIMethodOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenAPIMethodOption& operator=(OpenAPIMethodOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenAPIMethodOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpenAPIMethodOption* internal_default_instance() {
    return reinterpret_cast<const OpenAPIMethodOption*>(
               &_OpenAPIMethodOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(OpenAPIMethodOption& a, OpenAPIMethodOption& b) {
    a.Swap(&b);
  }
  inline void Swap(OpenAPIMethodOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenAPIMethodOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenAPIMethodOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OpenAPIMethodOption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OpenAPIMethodOption& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OpenAPIMethodOption& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenAPIMethodOption* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption";
  }
  protected:
  explicit OpenAPIMethodOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMethodFieldNumber = 1,
    kOptionFieldNumber = 2,
  };
  // string method = 1;
  void clear_method();
  const std::string& method() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_method(ArgT0&& arg0, ArgT... args);
  std::string* mutable_method();
  PROTOBUF_NODISCARD std::string* release_method();
  void set_allocated_method(std::string* method);
  private:
  const std::string& _internal_method() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_method(const std::string& value);
  std::string* _internal_mutable_method();
  public:

  // .grpc.gateway.protoc_gen_openapiv2.options.Operation option = 2;
  bool has_option() const;
  private:
  bool _internal_has_option() const;
  public:
  void clear_option();
  const ::grpc::gateway::protoc_gen_openapiv2::options::Operation& option() const;
  PROTOBUF_NODISCARD ::grpc::gateway::protoc_gen_openapiv2::options::Operation* release_option();
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation* mutable_option();
  void set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::Operation* option);
  private:
  const ::grpc::gateway::protoc_gen_openapiv2::options::Operation& _internal_option() const;
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation* _internal_mutable_option();
  public:
  void unsafe_arena_set_allocated_option(
      ::grpc::gateway::protoc_gen_openapiv2::options::Operation* option);
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation* unsafe_arena_release_option();

  // @@protoc_insertion_point(class_scope:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr method_;
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation* option_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
};
// -------------------------------------------------------------------

class OpenAPIMessageOption final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption) */ {
 public:
  inline OpenAPIMessageOption() : OpenAPIMessageOption(nullptr) {}
  ~OpenAPIMessageOption() override;
  explicit constexpr OpenAPIMessageOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpenAPIMessageOption(const OpenAPIMessageOption& from);
  OpenAPIMessageOption(OpenAPIMessageOption&& from) noexcept
    : OpenAPIMessageOption() {
    *this = ::std::move(from);
  }

  inline OpenAPIMessageOption& operator=(const OpenAPIMessageOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenAPIMessageOption& operator=(OpenAPIMessageOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenAPIMessageOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpenAPIMessageOption* internal_default_instance() {
    return reinterpret_cast<const OpenAPIMessageOption*>(
               &_OpenAPIMessageOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(OpenAPIMessageOption& a, OpenAPIMessageOption& b) {
    a.Swap(&b);
  }
  inline void Swap(OpenAPIMessageOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenAPIMessageOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenAPIMessageOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OpenAPIMessageOption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OpenAPIMessageOption& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OpenAPIMessageOption& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenAPIMessageOption* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption";
  }
  protected:
  explicit OpenAPIMessageOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
    kOptionFieldNumber = 2,
  };
  // string message = 1;
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // .grpc.gateway.protoc_gen_openapiv2.options.Schema option = 2;
  bool has_option() const;
  private:
  bool _internal_has_option() const;
  public:
  void clear_option();
  const ::grpc::gateway::protoc_gen_openapiv2::options::Schema& option() const;
  PROTOBUF_NODISCARD ::grpc::gateway::protoc_gen_openapiv2::options::Schema* release_option();
  ::grpc::gateway::protoc_gen_openapiv2::options::Schema* mutable_option();
  void set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::Schema* option);
  private:
  const ::grpc::gateway::protoc_gen_openapiv2::options::Schema& _internal_option() const;
  ::grpc::gateway::protoc_gen_openapiv2::options::Schema* _internal_mutable_option();
  public:
  void unsafe_arena_set_allocated_option(
      ::grpc::gateway::protoc_gen_openapiv2::options::Schema* option);
  ::grpc::gateway::protoc_gen_openapiv2::options::Schema* unsafe_arena_release_option();

  // @@protoc_insertion_point(class_scope:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::grpc::gateway::protoc_gen_openapiv2::options::Schema* option_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
};
// -------------------------------------------------------------------

class OpenAPIServiceOption final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption) */ {
 public:
  inline OpenAPIServiceOption() : OpenAPIServiceOption(nullptr) {}
  ~OpenAPIServiceOption() override;
  explicit constexpr OpenAPIServiceOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpenAPIServiceOption(const OpenAPIServiceOption& from);
  OpenAPIServiceOption(OpenAPIServiceOption&& from) noexcept
    : OpenAPIServiceOption() {
    *this = ::std::move(from);
  }

  inline OpenAPIServiceOption& operator=(const OpenAPIServiceOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenAPIServiceOption& operator=(OpenAPIServiceOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenAPIServiceOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpenAPIServiceOption* internal_default_instance() {
    return reinterpret_cast<const OpenAPIServiceOption*>(
               &_OpenAPIServiceOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(OpenAPIServiceOption& a, OpenAPIServiceOption& b) {
    a.Swap(&b);
  }
  inline void Swap(OpenAPIServiceOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenAPIServiceOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenAPIServiceOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OpenAPIServiceOption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OpenAPIServiceOption& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OpenAPIServiceOption& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenAPIServiceOption* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption";
  }
  protected:
  explicit OpenAPIServiceOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServiceFieldNumber = 1,
    kOptionFieldNumber = 2,
  };
  // string service = 1;
  void clear_service();
  const std::string& service() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_service(ArgT0&& arg0, ArgT... args);
  std::string* mutable_service();
  PROTOBUF_NODISCARD std::string* release_service();
  void set_allocated_service(std::string* service);
  private:
  const std::string& _internal_service() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_service(const std::string& value);
  std::string* _internal_mutable_service();
  public:

  // .grpc.gateway.protoc_gen_openapiv2.options.Tag option = 2;
  bool has_option() const;
  private:
  bool _internal_has_option() const;
  public:
  void clear_option();
  const ::grpc::gateway::protoc_gen_openapiv2::options::Tag& option() const;
  PROTOBUF_NODISCARD ::grpc::gateway::protoc_gen_openapiv2::options::Tag* release_option();
  ::grpc::gateway::protoc_gen_openapiv2::options::Tag* mutable_option();
  void set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::Tag* option);
  private:
  const ::grpc::gateway::protoc_gen_openapiv2::options::Tag& _internal_option() const;
  ::grpc::gateway::protoc_gen_openapiv2::options::Tag* _internal_mutable_option();
  public:
  void unsafe_arena_set_allocated_option(
      ::grpc::gateway::protoc_gen_openapiv2::options::Tag* option);
  ::grpc::gateway::protoc_gen_openapiv2::options::Tag* unsafe_arena_release_option();

  // @@protoc_insertion_point(class_scope:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr service_;
  ::grpc::gateway::protoc_gen_openapiv2::options::Tag* option_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
};
// -------------------------------------------------------------------

class OpenAPIFieldOption final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption) */ {
 public:
  inline OpenAPIFieldOption() : OpenAPIFieldOption(nullptr) {}
  ~OpenAPIFieldOption() override;
  explicit constexpr OpenAPIFieldOption(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpenAPIFieldOption(const OpenAPIFieldOption& from);
  OpenAPIFieldOption(OpenAPIFieldOption&& from) noexcept
    : OpenAPIFieldOption() {
    *this = ::std::move(from);
  }

  inline OpenAPIFieldOption& operator=(const OpenAPIFieldOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenAPIFieldOption& operator=(OpenAPIFieldOption&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenAPIFieldOption& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpenAPIFieldOption* internal_default_instance() {
    return reinterpret_cast<const OpenAPIFieldOption*>(
               &_OpenAPIFieldOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(OpenAPIFieldOption& a, OpenAPIFieldOption& b) {
    a.Swap(&b);
  }
  inline void Swap(OpenAPIFieldOption* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenAPIFieldOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenAPIFieldOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OpenAPIFieldOption>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OpenAPIFieldOption& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OpenAPIFieldOption& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenAPIFieldOption* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption";
  }
  protected:
  explicit OpenAPIFieldOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kOptionFieldNumber = 2,
  };
  // string field = 1;
  void clear_field();
  const std::string& field() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_field(ArgT0&& arg0, ArgT... args);
  std::string* mutable_field();
  PROTOBUF_NODISCARD std::string* release_field();
  void set_allocated_field(std::string* field);
  private:
  const std::string& _internal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field(const std::string& value);
  std::string* _internal_mutable_field();
  public:

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema option = 2;
  bool has_option() const;
  private:
  bool _internal_has_option() const;
  public:
  void clear_option();
  const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema& option() const;
  PROTOBUF_NODISCARD ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* release_option();
  ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* mutable_option();
  void set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* option);
  private:
  const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema& _internal_option() const;
  ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* _internal_mutable_option();
  public:
  void unsafe_arena_set_allocated_option(
      ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* option);
  ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* unsafe_arena_release_option();

  // @@protoc_insertion_point(class_scope:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field_;
  ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* option_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
};
// -------------------------------------------------------------------

class OpenAPIOptions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions) */ {
 public:
  inline OpenAPIOptions() : OpenAPIOptions(nullptr) {}
  ~OpenAPIOptions() override;
  explicit constexpr OpenAPIOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpenAPIOptions(const OpenAPIOptions& from);
  OpenAPIOptions(OpenAPIOptions&& from) noexcept
    : OpenAPIOptions() {
    *this = ::std::move(from);
  }

  inline OpenAPIOptions& operator=(const OpenAPIOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenAPIOptions& operator=(OpenAPIOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenAPIOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpenAPIOptions* internal_default_instance() {
    return reinterpret_cast<const OpenAPIOptions*>(
               &_OpenAPIOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(OpenAPIOptions& a, OpenAPIOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(OpenAPIOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenAPIOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenAPIOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OpenAPIOptions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OpenAPIOptions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OpenAPIOptions& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenAPIOptions* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions";
  }
  protected:
  explicit OpenAPIOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFieldNumber = 1,
    kMethodFieldNumber = 2,
    kMessageFieldNumber = 3,
    kServiceFieldNumber = 4,
    kFieldFieldNumber = 5,
  };
  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption file = 1;
  int file_size() const;
  private:
  int _internal_file_size() const;
  public:
  void clear_file();
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* mutable_file(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption >*
      mutable_file();
  private:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption& _internal_file(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* _internal_add_file();
  public:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption& file(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* add_file();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption >&
      file() const;

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption method = 2;
  int method_size() const;
  private:
  int _internal_method_size() const;
  public:
  void clear_method();
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* mutable_method(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption >*
      mutable_method();
  private:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption& _internal_method(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* _internal_add_method();
  public:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption& method(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* add_method();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption >&
      method() const;

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption message = 3;
  int message_size() const;
  private:
  int _internal_message_size() const;
  public:
  void clear_message();
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* mutable_message(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption >*
      mutable_message();
  private:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption& _internal_message(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* _internal_add_message();
  public:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption& message(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* add_message();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption >&
      message() const;

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption service = 4;
  int service_size() const;
  private:
  int _internal_service_size() const;
  public:
  void clear_service();
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* mutable_service(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption >*
      mutable_service();
  private:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption& _internal_service(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* _internal_add_service();
  public:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption& service(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* add_service();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption >&
      service() const;

  // repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption field = 5;
  int field_size() const;
  private:
  int _internal_field_size() const;
  public:
  void clear_field();
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* mutable_field(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption >*
      mutable_field();
  private:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption& _internal_field(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* _internal_add_field();
  public:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption& field(int index) const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* add_field();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption >&
      field() const;

  // @@protoc_insertion_point(class_scope:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption > file_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption > method_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption > message_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption > service_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption > field_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
};
// -------------------------------------------------------------------

class OpenAPIConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig) */ {
 public:
  inline OpenAPIConfig() : OpenAPIConfig(nullptr) {}
  ~OpenAPIConfig() override;
  explicit constexpr OpenAPIConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OpenAPIConfig(const OpenAPIConfig& from);
  OpenAPIConfig(OpenAPIConfig&& from) noexcept
    : OpenAPIConfig() {
    *this = ::std::move(from);
  }

  inline OpenAPIConfig& operator=(const OpenAPIConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenAPIConfig& operator=(OpenAPIConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenAPIConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpenAPIConfig* internal_default_instance() {
    return reinterpret_cast<const OpenAPIConfig*>(
               &_OpenAPIConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(OpenAPIConfig& a, OpenAPIConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(OpenAPIConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenAPIConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenAPIConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OpenAPIConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OpenAPIConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OpenAPIConfig& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenAPIConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig";
  }
  protected:
  explicit OpenAPIConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpenapiOptionsFieldNumber = 1,
  };
  // .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions openapi_options = 1;
  bool has_openapi_options() const;
  private:
  bool _internal_has_openapi_options() const;
  public:
  void clear_openapi_options();
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions& openapi_options() const;
  PROTOBUF_NODISCARD ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* release_openapi_options();
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* mutable_openapi_options();
  void set_allocated_openapi_options(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* openapi_options);
  private:
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions& _internal_openapi_options() const;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* _internal_mutable_openapi_options();
  public:
  void unsafe_arena_set_allocated_openapi_options(
      ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* openapi_options);
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* unsafe_arena_release_openapi_options();

  // @@protoc_insertion_point(class_scope:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* openapi_options_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OpenAPIFileOption

// string file = 1;
inline void OpenAPIFileOption::clear_file() {
  file_.ClearToEmpty();
}
inline const std::string& OpenAPIFileOption::file() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.file)
  return _internal_file();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void OpenAPIFileOption::set_file(ArgT0&& arg0, ArgT... args) {
 
 file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.file)
}
inline std::string* OpenAPIFileOption::mutable_file() {
  std::string* _s = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.file)
  return _s;
}
inline const std::string& OpenAPIFileOption::_internal_file() const {
  return file_.Get();
}
inline void OpenAPIFileOption::_internal_set_file(const std::string& value) {
  
  file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* OpenAPIFileOption::_internal_mutable_file() {
  
  return file_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* OpenAPIFileOption::release_file() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.file)
  return file_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void OpenAPIFileOption::set_allocated_file(std::string* file) {
  if (file != nullptr) {
    
  } else {
    
  }
  file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (file_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    file_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.file)
}

// .grpc.gateway.protoc_gen_openapiv2.options.Swagger option = 2;
inline bool OpenAPIFileOption::_internal_has_option() const {
  return this != internal_default_instance() && option_ != nullptr;
}
inline bool OpenAPIFileOption::has_option() const {
  return _internal_has_option();
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::Swagger& OpenAPIFileOption::_internal_option() const {
  const ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* p = option_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::gateway::protoc_gen_openapiv2::options::Swagger&>(
      ::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_default_instance_);
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::Swagger& OpenAPIFileOption::option() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.option)
  return _internal_option();
}
inline void OpenAPIFileOption::unsafe_arena_set_allocated_option(
    ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* option) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  option_ = option;
  if (option) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.option)
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* OpenAPIFileOption::release_option() {
  
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* temp = option_;
  option_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* OpenAPIFileOption::unsafe_arena_release_option() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.option)
  
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* temp = option_;
  option_ = nullptr;
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* OpenAPIFileOption::_internal_mutable_option() {
  
  if (option_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_openapiv2::options::Swagger>(GetArenaForAllocation());
    option_ = p;
  }
  return option_;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* OpenAPIFileOption::mutable_option() {
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* _msg = _internal_mutable_option();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.option)
  return _msg;
}
inline void OpenAPIFileOption::set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::Swagger* option) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  if (option) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option));
    if (message_arena != submessage_arena) {
      option = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, option, submessage_arena);
    }
    
  } else {
    
  }
  option_ = option;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption.option)
}

// -------------------------------------------------------------------

// OpenAPIMethodOption

// string method = 1;
inline void OpenAPIMethodOption::clear_method() {
  method_.ClearToEmpty();
}
inline const std::string& OpenAPIMethodOption::method() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.method)
  return _internal_method();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void OpenAPIMethodOption::set_method(ArgT0&& arg0, ArgT... args) {
 
 method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.method)
}
inline std::string* OpenAPIMethodOption::mutable_method() {
  std::string* _s = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.method)
  return _s;
}
inline const std::string& OpenAPIMethodOption::_internal_method() const {
  return method_.Get();
}
inline void OpenAPIMethodOption::_internal_set_method(const std::string& value) {
  
  method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* OpenAPIMethodOption::_internal_mutable_method() {
  
  return method_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* OpenAPIMethodOption::release_method() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.method)
  return method_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void OpenAPIMethodOption::set_allocated_method(std::string* method) {
  if (method != nullptr) {
    
  } else {
    
  }
  method_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), method,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (method_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    method_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.method)
}

// .grpc.gateway.protoc_gen_openapiv2.options.Operation option = 2;
inline bool OpenAPIMethodOption::_internal_has_option() const {
  return this != internal_default_instance() && option_ != nullptr;
}
inline bool OpenAPIMethodOption::has_option() const {
  return _internal_has_option();
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::Operation& OpenAPIMethodOption::_internal_option() const {
  const ::grpc::gateway::protoc_gen_openapiv2::options::Operation* p = option_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::gateway::protoc_gen_openapiv2::options::Operation&>(
      ::grpc::gateway::protoc_gen_openapiv2::options::_Operation_default_instance_);
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::Operation& OpenAPIMethodOption::option() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.option)
  return _internal_option();
}
inline void OpenAPIMethodOption::unsafe_arena_set_allocated_option(
    ::grpc::gateway::protoc_gen_openapiv2::options::Operation* option) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  option_ = option;
  if (option) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.option)
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Operation* OpenAPIMethodOption::release_option() {
  
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation* temp = option_;
  option_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Operation* OpenAPIMethodOption::unsafe_arena_release_option() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.option)
  
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation* temp = option_;
  option_ = nullptr;
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Operation* OpenAPIMethodOption::_internal_mutable_option() {
  
  if (option_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_openapiv2::options::Operation>(GetArenaForAllocation());
    option_ = p;
  }
  return option_;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Operation* OpenAPIMethodOption::mutable_option() {
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation* _msg = _internal_mutable_option();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.option)
  return _msg;
}
inline void OpenAPIMethodOption::set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::Operation* option) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  if (option) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option));
    if (message_arena != submessage_arena) {
      option = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, option, submessage_arena);
    }
    
  } else {
    
  }
  option_ = option;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption.option)
}

// -------------------------------------------------------------------

// OpenAPIMessageOption

// string message = 1;
inline void OpenAPIMessageOption::clear_message() {
  message_.ClearToEmpty();
}
inline const std::string& OpenAPIMessageOption::message() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void OpenAPIMessageOption::set_message(ArgT0&& arg0, ArgT... args) {
 
 message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.message)
}
inline std::string* OpenAPIMessageOption::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.message)
  return _s;
}
inline const std::string& OpenAPIMessageOption::_internal_message() const {
  return message_.Get();
}
inline void OpenAPIMessageOption::_internal_set_message(const std::string& value) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* OpenAPIMessageOption::_internal_mutable_message() {
  
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* OpenAPIMessageOption::release_message() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.message)
  return message_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void OpenAPIMessageOption::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.message)
}

// .grpc.gateway.protoc_gen_openapiv2.options.Schema option = 2;
inline bool OpenAPIMessageOption::_internal_has_option() const {
  return this != internal_default_instance() && option_ != nullptr;
}
inline bool OpenAPIMessageOption::has_option() const {
  return _internal_has_option();
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::Schema& OpenAPIMessageOption::_internal_option() const {
  const ::grpc::gateway::protoc_gen_openapiv2::options::Schema* p = option_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::gateway::protoc_gen_openapiv2::options::Schema&>(
      ::grpc::gateway::protoc_gen_openapiv2::options::_Schema_default_instance_);
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::Schema& OpenAPIMessageOption::option() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.option)
  return _internal_option();
}
inline void OpenAPIMessageOption::unsafe_arena_set_allocated_option(
    ::grpc::gateway::protoc_gen_openapiv2::options::Schema* option) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  option_ = option;
  if (option) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.option)
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Schema* OpenAPIMessageOption::release_option() {
  
  ::grpc::gateway::protoc_gen_openapiv2::options::Schema* temp = option_;
  option_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Schema* OpenAPIMessageOption::unsafe_arena_release_option() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.option)
  
  ::grpc::gateway::protoc_gen_openapiv2::options::Schema* temp = option_;
  option_ = nullptr;
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Schema* OpenAPIMessageOption::_internal_mutable_option() {
  
  if (option_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_openapiv2::options::Schema>(GetArenaForAllocation());
    option_ = p;
  }
  return option_;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Schema* OpenAPIMessageOption::mutable_option() {
  ::grpc::gateway::protoc_gen_openapiv2::options::Schema* _msg = _internal_mutable_option();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.option)
  return _msg;
}
inline void OpenAPIMessageOption::set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::Schema* option) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  if (option) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option));
    if (message_arena != submessage_arena) {
      option = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, option, submessage_arena);
    }
    
  } else {
    
  }
  option_ = option;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption.option)
}

// -------------------------------------------------------------------

// OpenAPIServiceOption

// string service = 1;
inline void OpenAPIServiceOption::clear_service() {
  service_.ClearToEmpty();
}
inline const std::string& OpenAPIServiceOption::service() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.service)
  return _internal_service();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void OpenAPIServiceOption::set_service(ArgT0&& arg0, ArgT... args) {
 
 service_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.service)
}
inline std::string* OpenAPIServiceOption::mutable_service() {
  std::string* _s = _internal_mutable_service();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.service)
  return _s;
}
inline const std::string& OpenAPIServiceOption::_internal_service() const {
  return service_.Get();
}
inline void OpenAPIServiceOption::_internal_set_service(const std::string& value) {
  
  service_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* OpenAPIServiceOption::_internal_mutable_service() {
  
  return service_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* OpenAPIServiceOption::release_service() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.service)
  return service_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void OpenAPIServiceOption::set_allocated_service(std::string* service) {
  if (service != nullptr) {
    
  } else {
    
  }
  service_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), service,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (service_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    service_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.service)
}

// .grpc.gateway.protoc_gen_openapiv2.options.Tag option = 2;
inline bool OpenAPIServiceOption::_internal_has_option() const {
  return this != internal_default_instance() && option_ != nullptr;
}
inline bool OpenAPIServiceOption::has_option() const {
  return _internal_has_option();
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::Tag& OpenAPIServiceOption::_internal_option() const {
  const ::grpc::gateway::protoc_gen_openapiv2::options::Tag* p = option_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::gateway::protoc_gen_openapiv2::options::Tag&>(
      ::grpc::gateway::protoc_gen_openapiv2::options::_Tag_default_instance_);
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::Tag& OpenAPIServiceOption::option() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.option)
  return _internal_option();
}
inline void OpenAPIServiceOption::unsafe_arena_set_allocated_option(
    ::grpc::gateway::protoc_gen_openapiv2::options::Tag* option) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  option_ = option;
  if (option) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.option)
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Tag* OpenAPIServiceOption::release_option() {
  
  ::grpc::gateway::protoc_gen_openapiv2::options::Tag* temp = option_;
  option_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Tag* OpenAPIServiceOption::unsafe_arena_release_option() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.option)
  
  ::grpc::gateway::protoc_gen_openapiv2::options::Tag* temp = option_;
  option_ = nullptr;
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Tag* OpenAPIServiceOption::_internal_mutable_option() {
  
  if (option_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_openapiv2::options::Tag>(GetArenaForAllocation());
    option_ = p;
  }
  return option_;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::Tag* OpenAPIServiceOption::mutable_option() {
  ::grpc::gateway::protoc_gen_openapiv2::options::Tag* _msg = _internal_mutable_option();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.option)
  return _msg;
}
inline void OpenAPIServiceOption::set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::Tag* option) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  if (option) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option));
    if (message_arena != submessage_arena) {
      option = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, option, submessage_arena);
    }
    
  } else {
    
  }
  option_ = option;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption.option)
}

// -------------------------------------------------------------------

// OpenAPIFieldOption

// string field = 1;
inline void OpenAPIFieldOption::clear_field() {
  field_.ClearToEmpty();
}
inline const std::string& OpenAPIFieldOption::field() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.field)
  return _internal_field();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void OpenAPIFieldOption::set_field(ArgT0&& arg0, ArgT... args) {
 
 field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.field)
}
inline std::string* OpenAPIFieldOption::mutable_field() {
  std::string* _s = _internal_mutable_field();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.field)
  return _s;
}
inline const std::string& OpenAPIFieldOption::_internal_field() const {
  return field_.Get();
}
inline void OpenAPIFieldOption::_internal_set_field(const std::string& value) {
  
  field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* OpenAPIFieldOption::_internal_mutable_field() {
  
  return field_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* OpenAPIFieldOption::release_field() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.field)
  return field_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void OpenAPIFieldOption::set_allocated_field(std::string* field) {
  if (field != nullptr) {
    
  } else {
    
  }
  field_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (field_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.field)
}

// .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema option = 2;
inline bool OpenAPIFieldOption::_internal_has_option() const {
  return this != internal_default_instance() && option_ != nullptr;
}
inline bool OpenAPIFieldOption::has_option() const {
  return _internal_has_option();
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema& OpenAPIFieldOption::_internal_option() const {
  const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* p = option_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema&>(
      ::grpc::gateway::protoc_gen_openapiv2::options::_JSONSchema_default_instance_);
}
inline const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema& OpenAPIFieldOption::option() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.option)
  return _internal_option();
}
inline void OpenAPIFieldOption::unsafe_arena_set_allocated_option(
    ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* option) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  option_ = option;
  if (option) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.option)
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* OpenAPIFieldOption::release_option() {
  
  ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* temp = option_;
  option_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* OpenAPIFieldOption::unsafe_arena_release_option() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.option)
  
  ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* temp = option_;
  option_ = nullptr;
  return temp;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* OpenAPIFieldOption::_internal_mutable_option() {
  
  if (option_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema>(GetArenaForAllocation());
    option_ = p;
  }
  return option_;
}
inline ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* OpenAPIFieldOption::mutable_option() {
  ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* _msg = _internal_mutable_option();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.option)
  return _msg;
}
inline void OpenAPIFieldOption::set_allocated_option(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* option) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(option_);
  }
  if (option) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(option));
    if (message_arena != submessage_arena) {
      option = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, option, submessage_arena);
    }
    
  } else {
    
  }
  option_ = option;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption.option)
}

// -------------------------------------------------------------------

// OpenAPIOptions

// repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFileOption file = 1;
inline int OpenAPIOptions::_internal_file_size() const {
  return file_.size();
}
inline int OpenAPIOptions::file_size() const {
  return _internal_file_size();
}
inline void OpenAPIOptions::clear_file() {
  file_.Clear();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* OpenAPIOptions::mutable_file(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.file)
  return file_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption >*
OpenAPIOptions::mutable_file() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.file)
  return &file_;
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption& OpenAPIOptions::_internal_file(int index) const {
  return file_.Get(index);
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption& OpenAPIOptions::file(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.file)
  return _internal_file(index);
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* OpenAPIOptions::_internal_add_file() {
  return file_.Add();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* OpenAPIOptions::add_file() {
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption* _add = _internal_add_file();
  // @@protoc_insertion_point(field_add:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.file)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFileOption >&
OpenAPIOptions::file() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.file)
  return file_;
}

// repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMethodOption method = 2;
inline int OpenAPIOptions::_internal_method_size() const {
  return method_.size();
}
inline int OpenAPIOptions::method_size() const {
  return _internal_method_size();
}
inline void OpenAPIOptions::clear_method() {
  method_.Clear();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* OpenAPIOptions::mutable_method(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.method)
  return method_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption >*
OpenAPIOptions::mutable_method() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.method)
  return &method_;
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption& OpenAPIOptions::_internal_method(int index) const {
  return method_.Get(index);
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption& OpenAPIOptions::method(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.method)
  return _internal_method(index);
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* OpenAPIOptions::_internal_add_method() {
  return method_.Add();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* OpenAPIOptions::add_method() {
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption* _add = _internal_add_method();
  // @@protoc_insertion_point(field_add:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.method)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMethodOption >&
OpenAPIOptions::method() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.method)
  return method_;
}

// repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIMessageOption message = 3;
inline int OpenAPIOptions::_internal_message_size() const {
  return message_.size();
}
inline int OpenAPIOptions::message_size() const {
  return _internal_message_size();
}
inline void OpenAPIOptions::clear_message() {
  message_.Clear();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* OpenAPIOptions::mutable_message(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.message)
  return message_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption >*
OpenAPIOptions::mutable_message() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.message)
  return &message_;
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption& OpenAPIOptions::_internal_message(int index) const {
  return message_.Get(index);
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption& OpenAPIOptions::message(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.message)
  return _internal_message(index);
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* OpenAPIOptions::_internal_add_message() {
  return message_.Add();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* OpenAPIOptions::add_message() {
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption* _add = _internal_add_message();
  // @@protoc_insertion_point(field_add:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.message)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIMessageOption >&
OpenAPIOptions::message() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.message)
  return message_;
}

// repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIServiceOption service = 4;
inline int OpenAPIOptions::_internal_service_size() const {
  return service_.size();
}
inline int OpenAPIOptions::service_size() const {
  return _internal_service_size();
}
inline void OpenAPIOptions::clear_service() {
  service_.Clear();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* OpenAPIOptions::mutable_service(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.service)
  return service_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption >*
OpenAPIOptions::mutable_service() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.service)
  return &service_;
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption& OpenAPIOptions::_internal_service(int index) const {
  return service_.Get(index);
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption& OpenAPIOptions::service(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.service)
  return _internal_service(index);
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* OpenAPIOptions::_internal_add_service() {
  return service_.Add();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* OpenAPIOptions::add_service() {
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption* _add = _internal_add_service();
  // @@protoc_insertion_point(field_add:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.service)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIServiceOption >&
OpenAPIOptions::service() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.service)
  return service_;
}

// repeated .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIFieldOption field = 5;
inline int OpenAPIOptions::_internal_field_size() const {
  return field_.size();
}
inline int OpenAPIOptions::field_size() const {
  return _internal_field_size();
}
inline void OpenAPIOptions::clear_field() {
  field_.Clear();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* OpenAPIOptions::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.field)
  return field_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption >*
OpenAPIOptions::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.field)
  return &field_;
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption& OpenAPIOptions::_internal_field(int index) const {
  return field_.Get(index);
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption& OpenAPIOptions::field(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.field)
  return _internal_field(index);
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* OpenAPIOptions::_internal_add_field() {
  return field_.Add();
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* OpenAPIOptions::add_field() {
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption* _add = _internal_add_field();
  // @@protoc_insertion_point(field_add:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.field)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIFieldOption >&
OpenAPIOptions::field() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions.field)
  return field_;
}

// -------------------------------------------------------------------

// OpenAPIConfig

// .grpc.gateway.internal.descriptor.openapiconfig.OpenAPIOptions openapi_options = 1;
inline bool OpenAPIConfig::_internal_has_openapi_options() const {
  return this != internal_default_instance() && openapi_options_ != nullptr;
}
inline bool OpenAPIConfig::has_openapi_options() const {
  return _internal_has_openapi_options();
}
inline void OpenAPIConfig::clear_openapi_options() {
  if (GetArenaForAllocation() == nullptr && openapi_options_ != nullptr) {
    delete openapi_options_;
  }
  openapi_options_ = nullptr;
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions& OpenAPIConfig::_internal_openapi_options() const {
  const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* p = openapi_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions&>(
      ::grpc::gateway::internal::descriptor::openapiconfig::_OpenAPIOptions_default_instance_);
}
inline const ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions& OpenAPIConfig::openapi_options() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig.openapi_options)
  return _internal_openapi_options();
}
inline void OpenAPIConfig::unsafe_arena_set_allocated_openapi_options(
    ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* openapi_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(openapi_options_);
  }
  openapi_options_ = openapi_options;
  if (openapi_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig.openapi_options)
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* OpenAPIConfig::release_openapi_options() {
  
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* temp = openapi_options_;
  openapi_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* OpenAPIConfig::unsafe_arena_release_openapi_options() {
  // @@protoc_insertion_point(field_release:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig.openapi_options)
  
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* temp = openapi_options_;
  openapi_options_ = nullptr;
  return temp;
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* OpenAPIConfig::_internal_mutable_openapi_options() {
  
  if (openapi_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions>(GetArenaForAllocation());
    openapi_options_ = p;
  }
  return openapi_options_;
}
inline ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* OpenAPIConfig::mutable_openapi_options() {
  ::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* _msg = _internal_mutable_openapi_options();
  // @@protoc_insertion_point(field_mutable:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig.openapi_options)
  return _msg;
}
inline void OpenAPIConfig::set_allocated_openapi_options(::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions* openapi_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete openapi_options_;
  }
  if (openapi_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::grpc::gateway::internal::descriptor::openapiconfig::OpenAPIOptions>::GetOwningArena(openapi_options);
    if (message_arena != submessage_arena) {
      openapi_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, openapi_options, submessage_arena);
    }
    
  } else {
    
  }
  openapi_options_ = openapi_options;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.internal.descriptor.openapiconfig.OpenAPIConfig.openapi_options)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openapiconfig
}  // namespace descriptor
}  // namespace internal
}  // namespace gateway
}  // namespace grpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_internal_2fdescriptor_2fopenapiconfig_2fopenapiconfig_2eproto
