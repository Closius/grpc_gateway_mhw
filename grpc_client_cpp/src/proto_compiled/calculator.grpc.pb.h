// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: calculator.proto
#ifndef GRPC_calculator_2eproto__INCLUDED
#define GRPC_calculator_2eproto__INCLUDED

#include "calculator.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace calculator {

class Calculator final {
 public:
  static constexpr char const* service_full_name() {
    return "calculator.Calculator";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status NewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::calculator::NewTestSet_response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::NewTestSet_response>> AsyncNewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::NewTestSet_response>>(AsyncNewTestSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::NewTestSet_response>> PrepareAsyncNewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::NewTestSet_response>>(PrepareAsyncNewTestSetRaw(context, request, cq));
    }
    virtual ::grpc::Status ChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncChangeSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncChangeSettingsRaw(context, request, cq));
    }
    virtual ::grpc::Status DoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::calculator::DoMath_response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DoMath_response>> AsyncDoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DoMath_response>>(AsyncDoMathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DoMath_response>> PrepareAsyncDoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DoMath_response>>(PrepareAsyncDoMathRaw(context, request, cq));
    }
    virtual ::grpc::Status ListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::calculator::ListToDict_response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::ListToDict_response>> AsyncListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::ListToDict_response>>(AsyncListToDictRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::ListToDict_response>> PrepareAsyncListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::ListToDict_response>>(PrepareAsyncListToDictRaw(context, request, cq));
    }
    virtual ::grpc::Status DictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::calculator::DictToList_response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DictToList_response>> AsyncDictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DictToList_response>>(AsyncDictToListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DictToList_response>> PrepareAsyncDictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DictToList_response>>(PrepareAsyncDictToListRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void NewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::calculator::NewTestSet_response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void NewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::calculator::NewTestSet_response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request* request, ::calculator::DoMath_response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request* request, ::calculator::DoMath_response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request* request, ::calculator::ListToDict_response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request* request, ::calculator::ListToDict_response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request* request, ::calculator::DictToList_response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request* request, ::calculator::DictToList_response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::calculator::NewTestSet_response>* AsyncNewTestSetRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::calculator::NewTestSet_response>* PrepareAsyncNewTestSetRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncChangeSettingsRaw(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncChangeSettingsRaw(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DoMath_response>* AsyncDoMathRaw(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DoMath_response>* PrepareAsyncDoMathRaw(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::calculator::ListToDict_response>* AsyncListToDictRaw(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::calculator::ListToDict_response>* PrepareAsyncListToDictRaw(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DictToList_response>* AsyncDictToListRaw(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::calculator::DictToList_response>* PrepareAsyncDictToListRaw(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status NewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::calculator::NewTestSet_response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::NewTestSet_response>> AsyncNewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::NewTestSet_response>>(AsyncNewTestSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::NewTestSet_response>> PrepareAsyncNewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::NewTestSet_response>>(PrepareAsyncNewTestSetRaw(context, request, cq));
    }
    ::grpc::Status ChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncChangeSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncChangeSettingsRaw(context, request, cq));
    }
    ::grpc::Status DoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::calculator::DoMath_response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::DoMath_response>> AsyncDoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::DoMath_response>>(AsyncDoMathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::DoMath_response>> PrepareAsyncDoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::DoMath_response>>(PrepareAsyncDoMathRaw(context, request, cq));
    }
    ::grpc::Status ListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::calculator::ListToDict_response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::ListToDict_response>> AsyncListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::ListToDict_response>>(AsyncListToDictRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::ListToDict_response>> PrepareAsyncListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::ListToDict_response>>(PrepareAsyncListToDictRaw(context, request, cq));
    }
    ::grpc::Status DictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::calculator::DictToList_response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::DictToList_response>> AsyncDictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::DictToList_response>>(AsyncDictToListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::DictToList_response>> PrepareAsyncDictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::calculator::DictToList_response>>(PrepareAsyncDictToListRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void NewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::calculator::NewTestSet_response* response, std::function<void(::grpc::Status)>) override;
      void NewTestSet(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::calculator::NewTestSet_response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ChangeSettings(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request* request, ::calculator::DoMath_response* response, std::function<void(::grpc::Status)>) override;
      void DoMath(::grpc::ClientContext* context, const ::calculator::DoMath_request* request, ::calculator::DoMath_response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request* request, ::calculator::ListToDict_response* response, std::function<void(::grpc::Status)>) override;
      void ListToDict(::grpc::ClientContext* context, const ::calculator::ListToDict_request* request, ::calculator::ListToDict_response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request* request, ::calculator::DictToList_response* response, std::function<void(::grpc::Status)>) override;
      void DictToList(::grpc::ClientContext* context, const ::calculator::DictToList_request* request, ::calculator::DictToList_response* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::calculator::NewTestSet_response>* AsyncNewTestSetRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::calculator::NewTestSet_response>* PrepareAsyncNewTestSetRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncChangeSettingsRaw(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncChangeSettingsRaw(::grpc::ClientContext* context, const ::calculator::ChangeSettings_request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::calculator::DoMath_response>* AsyncDoMathRaw(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::calculator::DoMath_response>* PrepareAsyncDoMathRaw(::grpc::ClientContext* context, const ::calculator::DoMath_request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::calculator::ListToDict_response>* AsyncListToDictRaw(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::calculator::ListToDict_response>* PrepareAsyncListToDictRaw(::grpc::ClientContext* context, const ::calculator::ListToDict_request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::calculator::DictToList_response>* AsyncDictToListRaw(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::calculator::DictToList_response>* PrepareAsyncDictToListRaw(::grpc::ClientContext* context, const ::calculator::DictToList_request& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_NewTestSet_;
    const ::grpc::internal::RpcMethod rpcmethod_ChangeSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_DoMath_;
    const ::grpc::internal::RpcMethod rpcmethod_ListToDict_;
    const ::grpc::internal::RpcMethod rpcmethod_DictToList_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status NewTestSet(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::calculator::NewTestSet_response* response);
    virtual ::grpc::Status ChangeSettings(::grpc::ServerContext* context, const ::calculator::ChangeSettings_request* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status DoMath(::grpc::ServerContext* context, const ::calculator::DoMath_request* request, ::calculator::DoMath_response* response);
    virtual ::grpc::Status ListToDict(::grpc::ServerContext* context, const ::calculator::ListToDict_request* request, ::calculator::ListToDict_response* response);
    virtual ::grpc::Status DictToList(::grpc::ServerContext* context, const ::calculator::DictToList_request* request, ::calculator::DictToList_response* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_NewTestSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_NewTestSet() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_NewTestSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTestSet(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::calculator::NewTestSet_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewTestSet(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::calculator::NewTestSet_response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangeSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ChangeSettings() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ChangeSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeSettings(::grpc::ServerContext* /*context*/, const ::calculator::ChangeSettings_request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangeSettings(::grpc::ServerContext* context, ::calculator::ChangeSettings_request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DoMath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DoMath() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DoMath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DoMath(::grpc::ServerContext* /*context*/, const ::calculator::DoMath_request* /*request*/, ::calculator::DoMath_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDoMath(::grpc::ServerContext* context, ::calculator::DoMath_request* request, ::grpc::ServerAsyncResponseWriter< ::calculator::DoMath_response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListToDict : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListToDict() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListToDict() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListToDict(::grpc::ServerContext* /*context*/, const ::calculator::ListToDict_request* /*request*/, ::calculator::ListToDict_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListToDict(::grpc::ServerContext* context, ::calculator::ListToDict_request* request, ::grpc::ServerAsyncResponseWriter< ::calculator::ListToDict_response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DictToList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DictToList() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DictToList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DictToList(::grpc::ServerContext* /*context*/, const ::calculator::DictToList_request* /*request*/, ::calculator::DictToList_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDictToList(::grpc::ServerContext* context, ::calculator::DictToList_request* request, ::grpc::ServerAsyncResponseWriter< ::calculator::DictToList_response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_NewTestSet<WithAsyncMethod_ChangeSettings<WithAsyncMethod_DoMath<WithAsyncMethod_ListToDict<WithAsyncMethod_DictToList<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_NewTestSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_NewTestSet() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::calculator::NewTestSet_response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::calculator::NewTestSet_response* response) { return this->NewTestSet(context, request, response); }));}
    void SetMessageAllocatorFor_NewTestSet(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::calculator::NewTestSet_response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::calculator::NewTestSet_response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_NewTestSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTestSet(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::calculator::NewTestSet_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* NewTestSet(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::calculator::NewTestSet_response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ChangeSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ChangeSettings() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::calculator::ChangeSettings_request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::calculator::ChangeSettings_request* request, ::google::protobuf::Empty* response) { return this->ChangeSettings(context, request, response); }));}
    void SetMessageAllocatorFor_ChangeSettings(
        ::grpc::MessageAllocator< ::calculator::ChangeSettings_request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::calculator::ChangeSettings_request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ChangeSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeSettings(::grpc::ServerContext* /*context*/, const ::calculator::ChangeSettings_request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangeSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::calculator::ChangeSettings_request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DoMath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DoMath() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::calculator::DoMath_request, ::calculator::DoMath_response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::calculator::DoMath_request* request, ::calculator::DoMath_response* response) { return this->DoMath(context, request, response); }));}
    void SetMessageAllocatorFor_DoMath(
        ::grpc::MessageAllocator< ::calculator::DoMath_request, ::calculator::DoMath_response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::calculator::DoMath_request, ::calculator::DoMath_response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DoMath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DoMath(::grpc::ServerContext* /*context*/, const ::calculator::DoMath_request* /*request*/, ::calculator::DoMath_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DoMath(
      ::grpc::CallbackServerContext* /*context*/, const ::calculator::DoMath_request* /*request*/, ::calculator::DoMath_response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListToDict : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListToDict() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::calculator::ListToDict_request, ::calculator::ListToDict_response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::calculator::ListToDict_request* request, ::calculator::ListToDict_response* response) { return this->ListToDict(context, request, response); }));}
    void SetMessageAllocatorFor_ListToDict(
        ::grpc::MessageAllocator< ::calculator::ListToDict_request, ::calculator::ListToDict_response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::calculator::ListToDict_request, ::calculator::ListToDict_response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListToDict() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListToDict(::grpc::ServerContext* /*context*/, const ::calculator::ListToDict_request* /*request*/, ::calculator::ListToDict_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListToDict(
      ::grpc::CallbackServerContext* /*context*/, const ::calculator::ListToDict_request* /*request*/, ::calculator::ListToDict_response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DictToList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DictToList() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::calculator::DictToList_request, ::calculator::DictToList_response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::calculator::DictToList_request* request, ::calculator::DictToList_response* response) { return this->DictToList(context, request, response); }));}
    void SetMessageAllocatorFor_DictToList(
        ::grpc::MessageAllocator< ::calculator::DictToList_request, ::calculator::DictToList_response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::calculator::DictToList_request, ::calculator::DictToList_response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DictToList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DictToList(::grpc::ServerContext* /*context*/, const ::calculator::DictToList_request* /*request*/, ::calculator::DictToList_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DictToList(
      ::grpc::CallbackServerContext* /*context*/, const ::calculator::DictToList_request* /*request*/, ::calculator::DictToList_response* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_NewTestSet<WithCallbackMethod_ChangeSettings<WithCallbackMethod_DoMath<WithCallbackMethod_ListToDict<WithCallbackMethod_DictToList<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_NewTestSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_NewTestSet() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_NewTestSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTestSet(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::calculator::NewTestSet_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangeSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ChangeSettings() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ChangeSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeSettings(::grpc::ServerContext* /*context*/, const ::calculator::ChangeSettings_request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DoMath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DoMath() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DoMath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DoMath(::grpc::ServerContext* /*context*/, const ::calculator::DoMath_request* /*request*/, ::calculator::DoMath_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListToDict : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListToDict() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListToDict() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListToDict(::grpc::ServerContext* /*context*/, const ::calculator::ListToDict_request* /*request*/, ::calculator::ListToDict_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DictToList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DictToList() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DictToList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DictToList(::grpc::ServerContext* /*context*/, const ::calculator::DictToList_request* /*request*/, ::calculator::DictToList_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_NewTestSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_NewTestSet() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_NewTestSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTestSet(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::calculator::NewTestSet_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewTestSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ChangeSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ChangeSettings() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ChangeSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeSettings(::grpc::ServerContext* /*context*/, const ::calculator::ChangeSettings_request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangeSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DoMath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DoMath() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DoMath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DoMath(::grpc::ServerContext* /*context*/, const ::calculator::DoMath_request* /*request*/, ::calculator::DoMath_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDoMath(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListToDict : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListToDict() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListToDict() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListToDict(::grpc::ServerContext* /*context*/, const ::calculator::ListToDict_request* /*request*/, ::calculator::ListToDict_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListToDict(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DictToList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DictToList() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DictToList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DictToList(::grpc::ServerContext* /*context*/, const ::calculator::DictToList_request* /*request*/, ::calculator::DictToList_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDictToList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_NewTestSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_NewTestSet() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->NewTestSet(context, request, response); }));
    }
    ~WithRawCallbackMethod_NewTestSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewTestSet(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::calculator::NewTestSet_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* NewTestSet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ChangeSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ChangeSettings() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ChangeSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_ChangeSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeSettings(::grpc::ServerContext* /*context*/, const ::calculator::ChangeSettings_request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangeSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DoMath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DoMath() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DoMath(context, request, response); }));
    }
    ~WithRawCallbackMethod_DoMath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DoMath(::grpc::ServerContext* /*context*/, const ::calculator::DoMath_request* /*request*/, ::calculator::DoMath_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DoMath(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListToDict : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListToDict() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListToDict(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListToDict() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListToDict(::grpc::ServerContext* /*context*/, const ::calculator::ListToDict_request* /*request*/, ::calculator::ListToDict_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListToDict(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DictToList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DictToList() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DictToList(context, request, response); }));
    }
    ~WithRawCallbackMethod_DictToList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DictToList(::grpc::ServerContext* /*context*/, const ::calculator::DictToList_request* /*request*/, ::calculator::DictToList_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DictToList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_NewTestSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_NewTestSet() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::calculator::NewTestSet_response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::calculator::NewTestSet_response>* streamer) {
                       return this->StreamedNewTestSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_NewTestSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status NewTestSet(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::calculator::NewTestSet_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedNewTestSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::calculator::NewTestSet_response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangeSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ChangeSettings() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::calculator::ChangeSettings_request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::calculator::ChangeSettings_request, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedChangeSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ChangeSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangeSettings(::grpc::ServerContext* /*context*/, const ::calculator::ChangeSettings_request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangeSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::calculator::ChangeSettings_request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DoMath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DoMath() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::calculator::DoMath_request, ::calculator::DoMath_response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::calculator::DoMath_request, ::calculator::DoMath_response>* streamer) {
                       return this->StreamedDoMath(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DoMath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DoMath(::grpc::ServerContext* /*context*/, const ::calculator::DoMath_request* /*request*/, ::calculator::DoMath_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDoMath(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::calculator::DoMath_request,::calculator::DoMath_response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListToDict : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListToDict() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::calculator::ListToDict_request, ::calculator::ListToDict_response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::calculator::ListToDict_request, ::calculator::ListToDict_response>* streamer) {
                       return this->StreamedListToDict(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListToDict() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListToDict(::grpc::ServerContext* /*context*/, const ::calculator::ListToDict_request* /*request*/, ::calculator::ListToDict_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListToDict(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::calculator::ListToDict_request,::calculator::ListToDict_response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DictToList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DictToList() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::calculator::DictToList_request, ::calculator::DictToList_response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::calculator::DictToList_request, ::calculator::DictToList_response>* streamer) {
                       return this->StreamedDictToList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DictToList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DictToList(::grpc::ServerContext* /*context*/, const ::calculator::DictToList_request* /*request*/, ::calculator::DictToList_response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDictToList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::calculator::DictToList_request,::calculator::DictToList_response>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_NewTestSet<WithStreamedUnaryMethod_ChangeSettings<WithStreamedUnaryMethod_DoMath<WithStreamedUnaryMethod_ListToDict<WithStreamedUnaryMethod_DictToList<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_NewTestSet<WithStreamedUnaryMethod_ChangeSettings<WithStreamedUnaryMethod_DoMath<WithStreamedUnaryMethod_ListToDict<WithStreamedUnaryMethod_DictToList<Service > > > > > StreamedService;
};

}  // namespace calculator


#endif  // GRPC_calculator_2eproto__INCLUDED
