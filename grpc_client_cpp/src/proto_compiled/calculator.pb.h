// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
#include "protoc-gen-openapiv2/options/annotations.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_calculator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_calculator_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_calculator_2eproto;
namespace calculator {
class ChangeSettings_request;
struct ChangeSettings_requestDefaultTypeInternal;
extern ChangeSettings_requestDefaultTypeInternal _ChangeSettings_request_default_instance_;
class ChangeSettings_request_Options;
struct ChangeSettings_request_OptionsDefaultTypeInternal;
extern ChangeSettings_request_OptionsDefaultTypeInternal _ChangeSettings_request_Options_default_instance_;
class DictToList_request;
struct DictToList_requestDefaultTypeInternal;
extern DictToList_requestDefaultTypeInternal _DictToList_request_default_instance_;
class DictToList_request_DictMes;
struct DictToList_request_DictMesDefaultTypeInternal;
extern DictToList_request_DictMesDefaultTypeInternal _DictToList_request_DictMes_default_instance_;
class DictToList_response;
struct DictToList_responseDefaultTypeInternal;
extern DictToList_responseDefaultTypeInternal _DictToList_response_default_instance_;
class DictToList_response_DictMes;
struct DictToList_response_DictMesDefaultTypeInternal;
extern DictToList_response_DictMesDefaultTypeInternal _DictToList_response_DictMes_default_instance_;
class DoMath_request;
struct DoMath_requestDefaultTypeInternal;
extern DoMath_requestDefaultTypeInternal _DoMath_request_default_instance_;
class DoMath_response;
struct DoMath_responseDefaultTypeInternal;
extern DoMath_responseDefaultTypeInternal _DoMath_response_default_instance_;
class ListToDict_request;
struct ListToDict_requestDefaultTypeInternal;
extern ListToDict_requestDefaultTypeInternal _ListToDict_request_default_instance_;
class ListToDict_response;
struct ListToDict_responseDefaultTypeInternal;
extern ListToDict_responseDefaultTypeInternal _ListToDict_response_default_instance_;
class ListToDict_response_DictMes;
struct ListToDict_response_DictMesDefaultTypeInternal;
extern ListToDict_response_DictMesDefaultTypeInternal _ListToDict_response_DictMes_default_instance_;
class NewTestSet_response;
struct NewTestSet_responseDefaultTypeInternal;
extern NewTestSet_responseDefaultTypeInternal _NewTestSet_response_default_instance_;
}  // namespace calculator
PROTOBUF_NAMESPACE_OPEN
template<> ::calculator::ChangeSettings_request* Arena::CreateMaybeMessage<::calculator::ChangeSettings_request>(Arena*);
template<> ::calculator::ChangeSettings_request_Options* Arena::CreateMaybeMessage<::calculator::ChangeSettings_request_Options>(Arena*);
template<> ::calculator::DictToList_request* Arena::CreateMaybeMessage<::calculator::DictToList_request>(Arena*);
template<> ::calculator::DictToList_request_DictMes* Arena::CreateMaybeMessage<::calculator::DictToList_request_DictMes>(Arena*);
template<> ::calculator::DictToList_response* Arena::CreateMaybeMessage<::calculator::DictToList_response>(Arena*);
template<> ::calculator::DictToList_response_DictMes* Arena::CreateMaybeMessage<::calculator::DictToList_response_DictMes>(Arena*);
template<> ::calculator::DoMath_request* Arena::CreateMaybeMessage<::calculator::DoMath_request>(Arena*);
template<> ::calculator::DoMath_response* Arena::CreateMaybeMessage<::calculator::DoMath_response>(Arena*);
template<> ::calculator::ListToDict_request* Arena::CreateMaybeMessage<::calculator::ListToDict_request>(Arena*);
template<> ::calculator::ListToDict_response* Arena::CreateMaybeMessage<::calculator::ListToDict_response>(Arena*);
template<> ::calculator::ListToDict_response_DictMes* Arena::CreateMaybeMessage<::calculator::ListToDict_response_DictMes>(Arena*);
template<> ::calculator::NewTestSet_response* Arena::CreateMaybeMessage<::calculator::NewTestSet_response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace calculator {

// ===================================================================

class NewTestSet_response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.NewTestSet_response) */ {
 public:
  inline NewTestSet_response() : NewTestSet_response(nullptr) {}
  ~NewTestSet_response() override;
  explicit constexpr NewTestSet_response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NewTestSet_response(const NewTestSet_response& from);
  NewTestSet_response(NewTestSet_response&& from) noexcept
    : NewTestSet_response() {
    *this = ::std::move(from);
  }

  inline NewTestSet_response& operator=(const NewTestSet_response& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewTestSet_response& operator=(NewTestSet_response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewTestSet_response& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewTestSet_response* internal_default_instance() {
    return reinterpret_cast<const NewTestSet_response*>(
               &_NewTestSet_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NewTestSet_response& a, NewTestSet_response& b) {
    a.Swap(&b);
  }
  inline void Swap(NewTestSet_response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewTestSet_response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewTestSet_response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NewTestSet_response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NewTestSet_response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NewTestSet_response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewTestSet_response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.NewTestSet_response";
  }
  protected:
  explicit NewTestSet_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // int32 message = 1;
  void clear_message();
  int32_t message() const;
  void set_message(int32_t value);
  private:
  int32_t _internal_message() const;
  void _internal_set_message(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:calculator.NewTestSet_response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t message_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ChangeSettings_request_Options final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.ChangeSettings_request.Options) */ {
 public:
  inline ChangeSettings_request_Options() : ChangeSettings_request_Options(nullptr) {}
  ~ChangeSettings_request_Options() override;
  explicit constexpr ChangeSettings_request_Options(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ChangeSettings_request_Options(const ChangeSettings_request_Options& from);
  ChangeSettings_request_Options(ChangeSettings_request_Options&& from) noexcept
    : ChangeSettings_request_Options() {
    *this = ::std::move(from);
  }

  inline ChangeSettings_request_Options& operator=(const ChangeSettings_request_Options& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangeSettings_request_Options& operator=(ChangeSettings_request_Options&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChangeSettings_request_Options& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChangeSettings_request_Options* internal_default_instance() {
    return reinterpret_cast<const ChangeSettings_request_Options*>(
               &_ChangeSettings_request_Options_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ChangeSettings_request_Options& a, ChangeSettings_request_Options& b) {
    a.Swap(&b);
  }
  inline void Swap(ChangeSettings_request_Options* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChangeSettings_request_Options* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChangeSettings_request_Options* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChangeSettings_request_Options>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ChangeSettings_request_Options& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ChangeSettings_request_Options& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChangeSettings_request_Options* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.ChangeSettings_request.Options";
  }
  protected:
  explicit ChangeSettings_request_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kField5RepStrFieldNumber = 5,
    kField1StrFieldNumber = 1,
    kField2IntFieldNumber = 2,
    kField3FloatFieldNumber = 3,
    kField4IntFieldNumber = 4,
  };
  // repeated string field5_rep_str = 5;
  int field5_rep_str_size() const;
  private:
  int _internal_field5_rep_str_size() const;
  public:
  void clear_field5_rep_str();
  const std::string& field5_rep_str(int index) const;
  std::string* mutable_field5_rep_str(int index);
  void set_field5_rep_str(int index, const std::string& value);
  void set_field5_rep_str(int index, std::string&& value);
  void set_field5_rep_str(int index, const char* value);
  void set_field5_rep_str(int index, const char* value, size_t size);
  std::string* add_field5_rep_str();
  void add_field5_rep_str(const std::string& value);
  void add_field5_rep_str(std::string&& value);
  void add_field5_rep_str(const char* value);
  void add_field5_rep_str(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& field5_rep_str() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_field5_rep_str();
  private:
  const std::string& _internal_field5_rep_str(int index) const;
  std::string* _internal_add_field5_rep_str();
  public:

  // string field1_str = 1;
  void clear_field1_str();
  const std::string& field1_str() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_field1_str(ArgT0&& arg0, ArgT... args);
  std::string* mutable_field1_str();
  PROTOBUF_NODISCARD std::string* release_field1_str();
  void set_allocated_field1_str(std::string* field1_str);
  private:
  const std::string& _internal_field1_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field1_str(const std::string& value);
  std::string* _internal_mutable_field1_str();
  public:

  // optional int32 field2_int = 2;
  bool has_field2_int() const;
  private:
  bool _internal_has_field2_int() const;
  public:
  void clear_field2_int();
  int32_t field2_int() const;
  void set_field2_int(int32_t value);
  private:
  int32_t _internal_field2_int() const;
  void _internal_set_field2_int(int32_t value);
  public:

  // float field3_float = 3;
  void clear_field3_float();
  float field3_float() const;
  void set_field3_float(float value);
  private:
  float _internal_field3_float() const;
  void _internal_set_field3_float(float value);
  public:

  // optional int32 field4_int = 4;
  bool has_field4_int() const;
  private:
  bool _internal_has_field4_int() const;
  public:
  void clear_field4_int();
  int32_t field4_int() const;
  void set_field4_int(int32_t value);
  private:
  int32_t _internal_field4_int() const;
  void _internal_set_field4_int(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:calculator.ChangeSettings_request.Options)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> field5_rep_str_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field1_str_;
  int32_t field2_int_;
  float field3_float_;
  int32_t field4_int_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ChangeSettings_request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.ChangeSettings_request) */ {
 public:
  inline ChangeSettings_request() : ChangeSettings_request(nullptr) {}
  ~ChangeSettings_request() override;
  explicit constexpr ChangeSettings_request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ChangeSettings_request(const ChangeSettings_request& from);
  ChangeSettings_request(ChangeSettings_request&& from) noexcept
    : ChangeSettings_request() {
    *this = ::std::move(from);
  }

  inline ChangeSettings_request& operator=(const ChangeSettings_request& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangeSettings_request& operator=(ChangeSettings_request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChangeSettings_request& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChangeSettings_request* internal_default_instance() {
    return reinterpret_cast<const ChangeSettings_request*>(
               &_ChangeSettings_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ChangeSettings_request& a, ChangeSettings_request& b) {
    a.Swap(&b);
  }
  inline void Swap(ChangeSettings_request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChangeSettings_request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChangeSettings_request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChangeSettings_request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ChangeSettings_request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ChangeSettings_request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChangeSettings_request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.ChangeSettings_request";
  }
  protected:
  explicit ChangeSettings_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ChangeSettings_request_Options Options;

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 3,
    kNameFieldNumber = 1,
    kIdentifierFieldNumber = 2,
  };
  // repeated .calculator.ChangeSettings_request.Options options = 3;
  int options_size() const;
  private:
  int _internal_options_size() const;
  public:
  void clear_options();
  ::calculator::ChangeSettings_request_Options* mutable_options(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ChangeSettings_request_Options >*
      mutable_options();
  private:
  const ::calculator::ChangeSettings_request_Options& _internal_options(int index) const;
  ::calculator::ChangeSettings_request_Options* _internal_add_options();
  public:
  const ::calculator::ChangeSettings_request_Options& options(int index) const;
  ::calculator::ChangeSettings_request_Options* add_options();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ChangeSettings_request_Options >&
      options() const;

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int32 identifier = 2;
  void clear_identifier();
  int32_t identifier() const;
  void set_identifier(int32_t value);
  private:
  int32_t _internal_identifier() const;
  void _internal_set_identifier(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:calculator.ChangeSettings_request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ChangeSettings_request_Options > options_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  int32_t identifier_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class DoMath_request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.DoMath_request) */ {
 public:
  inline DoMath_request() : DoMath_request(nullptr) {}
  ~DoMath_request() override;
  explicit constexpr DoMath_request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DoMath_request(const DoMath_request& from);
  DoMath_request(DoMath_request&& from) noexcept
    : DoMath_request() {
    *this = ::std::move(from);
  }

  inline DoMath_request& operator=(const DoMath_request& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoMath_request& operator=(DoMath_request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DoMath_request& default_instance() {
    return *internal_default_instance();
  }
  static inline const DoMath_request* internal_default_instance() {
    return reinterpret_cast<const DoMath_request*>(
               &_DoMath_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DoMath_request& a, DoMath_request& b) {
    a.Swap(&b);
  }
  inline void Swap(DoMath_request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DoMath_request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DoMath_request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DoMath_request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DoMath_request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DoMath_request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoMath_request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.DoMath_request";
  }
  protected:
  explicit DoMath_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperatorFieldNumber = 3,
    kAFieldNumber = 1,
    kBFieldNumber = 2,
  };
  // string operator = 3;
  void clear_operator_();
  const std::string& operator_() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_operator_(ArgT0&& arg0, ArgT... args);
  std::string* mutable_operator_();
  PROTOBUF_NODISCARD std::string* release_operator_();
  void set_allocated_operator_(std::string* operator_);
  private:
  const std::string& _internal_operator_() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_operator_(const std::string& value);
  std::string* _internal_mutable_operator_();
  public:

  // float a = 1;
  void clear_a();
  float a() const;
  void set_a(float value);
  private:
  float _internal_a() const;
  void _internal_set_a(float value);
  public:

  // float b = 2;
  void clear_b();
  float b() const;
  void set_b(float value);
  private:
  float _internal_b() const;
  void _internal_set_b(float value);
  public:

  // @@protoc_insertion_point(class_scope:calculator.DoMath_request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr operator__;
  float a_;
  float b_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class DoMath_response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.DoMath_response) */ {
 public:
  inline DoMath_response() : DoMath_response(nullptr) {}
  ~DoMath_response() override;
  explicit constexpr DoMath_response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DoMath_response(const DoMath_response& from);
  DoMath_response(DoMath_response&& from) noexcept
    : DoMath_response() {
    *this = ::std::move(from);
  }

  inline DoMath_response& operator=(const DoMath_response& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoMath_response& operator=(DoMath_response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DoMath_response& default_instance() {
    return *internal_default_instance();
  }
  static inline const DoMath_response* internal_default_instance() {
    return reinterpret_cast<const DoMath_response*>(
               &_DoMath_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DoMath_response& a, DoMath_response& b) {
    a.Swap(&b);
  }
  inline void Swap(DoMath_response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DoMath_response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DoMath_response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DoMath_response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DoMath_response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DoMath_response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoMath_response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.DoMath_response";
  }
  protected:
  explicit DoMath_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // float message = 1;
  void clear_message();
  float message() const;
  void set_message(float value);
  private:
  float _internal_message() const;
  void _internal_set_message(float value);
  public:

  // @@protoc_insertion_point(class_scope:calculator.DoMath_response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float message_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ListToDict_request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.ListToDict_request) */ {
 public:
  inline ListToDict_request() : ListToDict_request(nullptr) {}
  ~ListToDict_request() override;
  explicit constexpr ListToDict_request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListToDict_request(const ListToDict_request& from);
  ListToDict_request(ListToDict_request&& from) noexcept
    : ListToDict_request() {
    *this = ::std::move(from);
  }

  inline ListToDict_request& operator=(const ListToDict_request& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListToDict_request& operator=(ListToDict_request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListToDict_request& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListToDict_request* internal_default_instance() {
    return reinterpret_cast<const ListToDict_request*>(
               &_ListToDict_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ListToDict_request& a, ListToDict_request& b) {
    a.Swap(&b);
  }
  inline void Swap(ListToDict_request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListToDict_request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListToDict_request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListToDict_request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListToDict_request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ListToDict_request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListToDict_request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.ListToDict_request";
  }
  protected:
  explicit ListToDict_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeqKStrFieldNumber = 1,
    kSeqVIntFieldNumber = 2,
  };
  // repeated string seq_k_str = 1;
  int seq_k_str_size() const;
  private:
  int _internal_seq_k_str_size() const;
  public:
  void clear_seq_k_str();
  const std::string& seq_k_str(int index) const;
  std::string* mutable_seq_k_str(int index);
  void set_seq_k_str(int index, const std::string& value);
  void set_seq_k_str(int index, std::string&& value);
  void set_seq_k_str(int index, const char* value);
  void set_seq_k_str(int index, const char* value, size_t size);
  std::string* add_seq_k_str();
  void add_seq_k_str(const std::string& value);
  void add_seq_k_str(std::string&& value);
  void add_seq_k_str(const char* value);
  void add_seq_k_str(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& seq_k_str() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_seq_k_str();
  private:
  const std::string& _internal_seq_k_str(int index) const;
  std::string* _internal_add_seq_k_str();
  public:

  // repeated int32 seq_v_int = 2;
  int seq_v_int_size() const;
  private:
  int _internal_seq_v_int_size() const;
  public:
  void clear_seq_v_int();
  private:
  int32_t _internal_seq_v_int(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_seq_v_int() const;
  void _internal_add_seq_v_int(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_seq_v_int();
  public:
  int32_t seq_v_int(int index) const;
  void set_seq_v_int(int index, int32_t value);
  void add_seq_v_int(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      seq_v_int() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_seq_v_int();

  // @@protoc_insertion_point(class_scope:calculator.ListToDict_request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> seq_k_str_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > seq_v_int_;
  mutable std::atomic<int> _seq_v_int_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ListToDict_response_DictMes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.ListToDict_response.DictMes) */ {
 public:
  inline ListToDict_response_DictMes() : ListToDict_response_DictMes(nullptr) {}
  ~ListToDict_response_DictMes() override;
  explicit constexpr ListToDict_response_DictMes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListToDict_response_DictMes(const ListToDict_response_DictMes& from);
  ListToDict_response_DictMes(ListToDict_response_DictMes&& from) noexcept
    : ListToDict_response_DictMes() {
    *this = ::std::move(from);
  }

  inline ListToDict_response_DictMes& operator=(const ListToDict_response_DictMes& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListToDict_response_DictMes& operator=(ListToDict_response_DictMes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListToDict_response_DictMes& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListToDict_response_DictMes* internal_default_instance() {
    return reinterpret_cast<const ListToDict_response_DictMes*>(
               &_ListToDict_response_DictMes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ListToDict_response_DictMes& a, ListToDict_response_DictMes& b) {
    a.Swap(&b);
  }
  inline void Swap(ListToDict_response_DictMes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListToDict_response_DictMes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListToDict_response_DictMes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListToDict_response_DictMes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListToDict_response_DictMes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ListToDict_response_DictMes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListToDict_response_DictMes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.ListToDict_response.DictMes";
  }
  protected:
  explicit ListToDict_response_DictMes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKFieldNumber = 1,
    kVFieldNumber = 2,
  };
  // repeated string k = 1;
  int k_size() const;
  private:
  int _internal_k_size() const;
  public:
  void clear_k();
  const std::string& k(int index) const;
  std::string* mutable_k(int index);
  void set_k(int index, const std::string& value);
  void set_k(int index, std::string&& value);
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  std::string* add_k();
  void add_k(const std::string& value);
  void add_k(std::string&& value);
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& k() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_k();
  private:
  const std::string& _internal_k(int index) const;
  std::string* _internal_add_k();
  public:

  // repeated int32 v = 2;
  int v_size() const;
  private:
  int _internal_v_size() const;
  public:
  void clear_v();
  private:
  int32_t _internal_v(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_v() const;
  void _internal_add_v(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_v();
  public:
  int32_t v(int index) const;
  void set_v(int index, int32_t value);
  void add_v(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      v() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_v();

  // @@protoc_insertion_point(class_scope:calculator.ListToDict_response.DictMes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> k_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > v_;
  mutable std::atomic<int> _v_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ListToDict_response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.ListToDict_response) */ {
 public:
  inline ListToDict_response() : ListToDict_response(nullptr) {}
  ~ListToDict_response() override;
  explicit constexpr ListToDict_response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListToDict_response(const ListToDict_response& from);
  ListToDict_response(ListToDict_response&& from) noexcept
    : ListToDict_response() {
    *this = ::std::move(from);
  }

  inline ListToDict_response& operator=(const ListToDict_response& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListToDict_response& operator=(ListToDict_response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListToDict_response& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListToDict_response* internal_default_instance() {
    return reinterpret_cast<const ListToDict_response*>(
               &_ListToDict_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ListToDict_response& a, ListToDict_response& b) {
    a.Swap(&b);
  }
  inline void Swap(ListToDict_response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListToDict_response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListToDict_response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListToDict_response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListToDict_response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ListToDict_response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListToDict_response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.ListToDict_response";
  }
  protected:
  explicit ListToDict_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ListToDict_response_DictMes DictMes;

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // repeated .calculator.ListToDict_response.DictMes message = 1;
  int message_size() const;
  private:
  int _internal_message_size() const;
  public:
  void clear_message();
  ::calculator::ListToDict_response_DictMes* mutable_message(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ListToDict_response_DictMes >*
      mutable_message();
  private:
  const ::calculator::ListToDict_response_DictMes& _internal_message(int index) const;
  ::calculator::ListToDict_response_DictMes* _internal_add_message();
  public:
  const ::calculator::ListToDict_response_DictMes& message(int index) const;
  ::calculator::ListToDict_response_DictMes* add_message();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ListToDict_response_DictMes >&
      message() const;

  // @@protoc_insertion_point(class_scope:calculator.ListToDict_response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ListToDict_response_DictMes > message_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class DictToList_request_DictMes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.DictToList_request.DictMes) */ {
 public:
  inline DictToList_request_DictMes() : DictToList_request_DictMes(nullptr) {}
  ~DictToList_request_DictMes() override;
  explicit constexpr DictToList_request_DictMes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DictToList_request_DictMes(const DictToList_request_DictMes& from);
  DictToList_request_DictMes(DictToList_request_DictMes&& from) noexcept
    : DictToList_request_DictMes() {
    *this = ::std::move(from);
  }

  inline DictToList_request_DictMes& operator=(const DictToList_request_DictMes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DictToList_request_DictMes& operator=(DictToList_request_DictMes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DictToList_request_DictMes& default_instance() {
    return *internal_default_instance();
  }
  static inline const DictToList_request_DictMes* internal_default_instance() {
    return reinterpret_cast<const DictToList_request_DictMes*>(
               &_DictToList_request_DictMes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DictToList_request_DictMes& a, DictToList_request_DictMes& b) {
    a.Swap(&b);
  }
  inline void Swap(DictToList_request_DictMes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DictToList_request_DictMes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DictToList_request_DictMes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DictToList_request_DictMes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DictToList_request_DictMes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DictToList_request_DictMes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DictToList_request_DictMes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.DictToList_request.DictMes";
  }
  protected:
  explicit DictToList_request_DictMes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVFieldNumber = 2,
    kKFieldNumber = 1,
  };
  // repeated int32 v = 2;
  int v_size() const;
  private:
  int _internal_v_size() const;
  public:
  void clear_v();
  private:
  int32_t _internal_v(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_v() const;
  void _internal_add_v(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_v();
  public:
  int32_t v(int index) const;
  void set_v(int index, int32_t value);
  void add_v(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      v() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_v();

  // string k = 1;
  void clear_k();
  const std::string& k() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_k(ArgT0&& arg0, ArgT... args);
  std::string* mutable_k();
  PROTOBUF_NODISCARD std::string* release_k();
  void set_allocated_k(std::string* k);
  private:
  const std::string& _internal_k() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_k(const std::string& value);
  std::string* _internal_mutable_k();
  public:

  // @@protoc_insertion_point(class_scope:calculator.DictToList_request.DictMes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > v_;
  mutable std::atomic<int> _v_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr k_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class DictToList_request final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.DictToList_request) */ {
 public:
  inline DictToList_request() : DictToList_request(nullptr) {}
  ~DictToList_request() override;
  explicit constexpr DictToList_request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DictToList_request(const DictToList_request& from);
  DictToList_request(DictToList_request&& from) noexcept
    : DictToList_request() {
    *this = ::std::move(from);
  }

  inline DictToList_request& operator=(const DictToList_request& from) {
    CopyFrom(from);
    return *this;
  }
  inline DictToList_request& operator=(DictToList_request&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DictToList_request& default_instance() {
    return *internal_default_instance();
  }
  static inline const DictToList_request* internal_default_instance() {
    return reinterpret_cast<const DictToList_request*>(
               &_DictToList_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DictToList_request& a, DictToList_request& b) {
    a.Swap(&b);
  }
  inline void Swap(DictToList_request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DictToList_request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DictToList_request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DictToList_request>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DictToList_request& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DictToList_request& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DictToList_request* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.DictToList_request";
  }
  protected:
  explicit DictToList_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DictToList_request_DictMes DictMes;

  // accessors -------------------------------------------------------

  enum : int {
    kDictSmplFieldNumber = 1,
  };
  // repeated .calculator.DictToList_request.DictMes dict_smpl = 1;
  int dict_smpl_size() const;
  private:
  int _internal_dict_smpl_size() const;
  public:
  void clear_dict_smpl();
  ::calculator::DictToList_request_DictMes* mutable_dict_smpl(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_request_DictMes >*
      mutable_dict_smpl();
  private:
  const ::calculator::DictToList_request_DictMes& _internal_dict_smpl(int index) const;
  ::calculator::DictToList_request_DictMes* _internal_add_dict_smpl();
  public:
  const ::calculator::DictToList_request_DictMes& dict_smpl(int index) const;
  ::calculator::DictToList_request_DictMes* add_dict_smpl();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_request_DictMes >&
      dict_smpl() const;

  // @@protoc_insertion_point(class_scope:calculator.DictToList_request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_request_DictMes > dict_smpl_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class DictToList_response_DictMes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.DictToList_response.DictMes) */ {
 public:
  inline DictToList_response_DictMes() : DictToList_response_DictMes(nullptr) {}
  ~DictToList_response_DictMes() override;
  explicit constexpr DictToList_response_DictMes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DictToList_response_DictMes(const DictToList_response_DictMes& from);
  DictToList_response_DictMes(DictToList_response_DictMes&& from) noexcept
    : DictToList_response_DictMes() {
    *this = ::std::move(from);
  }

  inline DictToList_response_DictMes& operator=(const DictToList_response_DictMes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DictToList_response_DictMes& operator=(DictToList_response_DictMes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DictToList_response_DictMes& default_instance() {
    return *internal_default_instance();
  }
  static inline const DictToList_response_DictMes* internal_default_instance() {
    return reinterpret_cast<const DictToList_response_DictMes*>(
               &_DictToList_response_DictMes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DictToList_response_DictMes& a, DictToList_response_DictMes& b) {
    a.Swap(&b);
  }
  inline void Swap(DictToList_response_DictMes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DictToList_response_DictMes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DictToList_response_DictMes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DictToList_response_DictMes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DictToList_response_DictMes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DictToList_response_DictMes& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DictToList_response_DictMes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.DictToList_response.DictMes";
  }
  protected:
  explicit DictToList_response_DictMes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVFieldNumber = 2,
    kKFieldNumber = 1,
  };
  // repeated int32 v = 2;
  int v_size() const;
  private:
  int _internal_v_size() const;
  public:
  void clear_v();
  private:
  int32_t _internal_v(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_v() const;
  void _internal_add_v(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_v();
  public:
  int32_t v(int index) const;
  void set_v(int index, int32_t value);
  void add_v(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      v() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_v();

  // string k = 1;
  void clear_k();
  const std::string& k() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_k(ArgT0&& arg0, ArgT... args);
  std::string* mutable_k();
  PROTOBUF_NODISCARD std::string* release_k();
  void set_allocated_k(std::string* k);
  private:
  const std::string& _internal_k() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_k(const std::string& value);
  std::string* _internal_mutable_k();
  public:

  // @@protoc_insertion_point(class_scope:calculator.DictToList_response.DictMes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > v_;
  mutable std::atomic<int> _v_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr k_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class DictToList_response final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculator.DictToList_response) */ {
 public:
  inline DictToList_response() : DictToList_response(nullptr) {}
  ~DictToList_response() override;
  explicit constexpr DictToList_response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DictToList_response(const DictToList_response& from);
  DictToList_response(DictToList_response&& from) noexcept
    : DictToList_response() {
    *this = ::std::move(from);
  }

  inline DictToList_response& operator=(const DictToList_response& from) {
    CopyFrom(from);
    return *this;
  }
  inline DictToList_response& operator=(DictToList_response&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DictToList_response& default_instance() {
    return *internal_default_instance();
  }
  static inline const DictToList_response* internal_default_instance() {
    return reinterpret_cast<const DictToList_response*>(
               &_DictToList_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DictToList_response& a, DictToList_response& b) {
    a.Swap(&b);
  }
  inline void Swap(DictToList_response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DictToList_response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DictToList_response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DictToList_response>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DictToList_response& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DictToList_response& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DictToList_response* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculator.DictToList_response";
  }
  protected:
  explicit DictToList_response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DictToList_response_DictMes DictMes;

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // repeated .calculator.DictToList_response.DictMes message = 1;
  int message_size() const;
  private:
  int _internal_message_size() const;
  public:
  void clear_message();
  ::calculator::DictToList_response_DictMes* mutable_message(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_response_DictMes >*
      mutable_message();
  private:
  const ::calculator::DictToList_response_DictMes& _internal_message(int index) const;
  ::calculator::DictToList_response_DictMes* _internal_add_message();
  public:
  const ::calculator::DictToList_response_DictMes& message(int index) const;
  ::calculator::DictToList_response_DictMes* add_message();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_response_DictMes >&
      message() const;

  // @@protoc_insertion_point(class_scope:calculator.DictToList_response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_response_DictMes > message_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_calculator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NewTestSet_response

// int32 message = 1;
inline void NewTestSet_response::clear_message() {
  message_ = 0;
}
inline int32_t NewTestSet_response::_internal_message() const {
  return message_;
}
inline int32_t NewTestSet_response::message() const {
  // @@protoc_insertion_point(field_get:calculator.NewTestSet_response.message)
  return _internal_message();
}
inline void NewTestSet_response::_internal_set_message(int32_t value) {
  
  message_ = value;
}
inline void NewTestSet_response::set_message(int32_t value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:calculator.NewTestSet_response.message)
}

// -------------------------------------------------------------------

// ChangeSettings_request_Options

// string field1_str = 1;
inline void ChangeSettings_request_Options::clear_field1_str() {
  field1_str_.ClearToEmpty();
}
inline const std::string& ChangeSettings_request_Options::field1_str() const {
  // @@protoc_insertion_point(field_get:calculator.ChangeSettings_request.Options.field1_str)
  return _internal_field1_str();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ChangeSettings_request_Options::set_field1_str(ArgT0&& arg0, ArgT... args) {
 
 field1_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:calculator.ChangeSettings_request.Options.field1_str)
}
inline std::string* ChangeSettings_request_Options::mutable_field1_str() {
  std::string* _s = _internal_mutable_field1_str();
  // @@protoc_insertion_point(field_mutable:calculator.ChangeSettings_request.Options.field1_str)
  return _s;
}
inline const std::string& ChangeSettings_request_Options::_internal_field1_str() const {
  return field1_str_.Get();
}
inline void ChangeSettings_request_Options::_internal_set_field1_str(const std::string& value) {
  
  field1_str_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ChangeSettings_request_Options::_internal_mutable_field1_str() {
  
  return field1_str_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ChangeSettings_request_Options::release_field1_str() {
  // @@protoc_insertion_point(field_release:calculator.ChangeSettings_request.Options.field1_str)
  return field1_str_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ChangeSettings_request_Options::set_allocated_field1_str(std::string* field1_str) {
  if (field1_str != nullptr) {
    
  } else {
    
  }
  field1_str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), field1_str,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (field1_str_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    field1_str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:calculator.ChangeSettings_request.Options.field1_str)
}

// optional int32 field2_int = 2;
inline bool ChangeSettings_request_Options::_internal_has_field2_int() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ChangeSettings_request_Options::has_field2_int() const {
  return _internal_has_field2_int();
}
inline void ChangeSettings_request_Options::clear_field2_int() {
  field2_int_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline int32_t ChangeSettings_request_Options::_internal_field2_int() const {
  return field2_int_;
}
inline int32_t ChangeSettings_request_Options::field2_int() const {
  // @@protoc_insertion_point(field_get:calculator.ChangeSettings_request.Options.field2_int)
  return _internal_field2_int();
}
inline void ChangeSettings_request_Options::_internal_set_field2_int(int32_t value) {
  _has_bits_[0] |= 0x00000001u;
  field2_int_ = value;
}
inline void ChangeSettings_request_Options::set_field2_int(int32_t value) {
  _internal_set_field2_int(value);
  // @@protoc_insertion_point(field_set:calculator.ChangeSettings_request.Options.field2_int)
}

// float field3_float = 3;
inline void ChangeSettings_request_Options::clear_field3_float() {
  field3_float_ = 0;
}
inline float ChangeSettings_request_Options::_internal_field3_float() const {
  return field3_float_;
}
inline float ChangeSettings_request_Options::field3_float() const {
  // @@protoc_insertion_point(field_get:calculator.ChangeSettings_request.Options.field3_float)
  return _internal_field3_float();
}
inline void ChangeSettings_request_Options::_internal_set_field3_float(float value) {
  
  field3_float_ = value;
}
inline void ChangeSettings_request_Options::set_field3_float(float value) {
  _internal_set_field3_float(value);
  // @@protoc_insertion_point(field_set:calculator.ChangeSettings_request.Options.field3_float)
}

// optional int32 field4_int = 4;
inline bool ChangeSettings_request_Options::_internal_has_field4_int() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ChangeSettings_request_Options::has_field4_int() const {
  return _internal_has_field4_int();
}
inline void ChangeSettings_request_Options::clear_field4_int() {
  field4_int_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t ChangeSettings_request_Options::_internal_field4_int() const {
  return field4_int_;
}
inline int32_t ChangeSettings_request_Options::field4_int() const {
  // @@protoc_insertion_point(field_get:calculator.ChangeSettings_request.Options.field4_int)
  return _internal_field4_int();
}
inline void ChangeSettings_request_Options::_internal_set_field4_int(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  field4_int_ = value;
}
inline void ChangeSettings_request_Options::set_field4_int(int32_t value) {
  _internal_set_field4_int(value);
  // @@protoc_insertion_point(field_set:calculator.ChangeSettings_request.Options.field4_int)
}

// repeated string field5_rep_str = 5;
inline int ChangeSettings_request_Options::_internal_field5_rep_str_size() const {
  return field5_rep_str_.size();
}
inline int ChangeSettings_request_Options::field5_rep_str_size() const {
  return _internal_field5_rep_str_size();
}
inline void ChangeSettings_request_Options::clear_field5_rep_str() {
  field5_rep_str_.Clear();
}
inline std::string* ChangeSettings_request_Options::add_field5_rep_str() {
  std::string* _s = _internal_add_field5_rep_str();
  // @@protoc_insertion_point(field_add_mutable:calculator.ChangeSettings_request.Options.field5_rep_str)
  return _s;
}
inline const std::string& ChangeSettings_request_Options::_internal_field5_rep_str(int index) const {
  return field5_rep_str_.Get(index);
}
inline const std::string& ChangeSettings_request_Options::field5_rep_str(int index) const {
  // @@protoc_insertion_point(field_get:calculator.ChangeSettings_request.Options.field5_rep_str)
  return _internal_field5_rep_str(index);
}
inline std::string* ChangeSettings_request_Options::mutable_field5_rep_str(int index) {
  // @@protoc_insertion_point(field_mutable:calculator.ChangeSettings_request.Options.field5_rep_str)
  return field5_rep_str_.Mutable(index);
}
inline void ChangeSettings_request_Options::set_field5_rep_str(int index, const std::string& value) {
  field5_rep_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:calculator.ChangeSettings_request.Options.field5_rep_str)
}
inline void ChangeSettings_request_Options::set_field5_rep_str(int index, std::string&& value) {
  field5_rep_str_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:calculator.ChangeSettings_request.Options.field5_rep_str)
}
inline void ChangeSettings_request_Options::set_field5_rep_str(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  field5_rep_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:calculator.ChangeSettings_request.Options.field5_rep_str)
}
inline void ChangeSettings_request_Options::set_field5_rep_str(int index, const char* value, size_t size) {
  field5_rep_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:calculator.ChangeSettings_request.Options.field5_rep_str)
}
inline std::string* ChangeSettings_request_Options::_internal_add_field5_rep_str() {
  return field5_rep_str_.Add();
}
inline void ChangeSettings_request_Options::add_field5_rep_str(const std::string& value) {
  field5_rep_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:calculator.ChangeSettings_request.Options.field5_rep_str)
}
inline void ChangeSettings_request_Options::add_field5_rep_str(std::string&& value) {
  field5_rep_str_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:calculator.ChangeSettings_request.Options.field5_rep_str)
}
inline void ChangeSettings_request_Options::add_field5_rep_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  field5_rep_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:calculator.ChangeSettings_request.Options.field5_rep_str)
}
inline void ChangeSettings_request_Options::add_field5_rep_str(const char* value, size_t size) {
  field5_rep_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:calculator.ChangeSettings_request.Options.field5_rep_str)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ChangeSettings_request_Options::field5_rep_str() const {
  // @@protoc_insertion_point(field_list:calculator.ChangeSettings_request.Options.field5_rep_str)
  return field5_rep_str_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ChangeSettings_request_Options::mutable_field5_rep_str() {
  // @@protoc_insertion_point(field_mutable_list:calculator.ChangeSettings_request.Options.field5_rep_str)
  return &field5_rep_str_;
}

// -------------------------------------------------------------------

// ChangeSettings_request

// string name = 1;
inline void ChangeSettings_request::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& ChangeSettings_request::name() const {
  // @@protoc_insertion_point(field_get:calculator.ChangeSettings_request.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ChangeSettings_request::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:calculator.ChangeSettings_request.name)
}
inline std::string* ChangeSettings_request::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:calculator.ChangeSettings_request.name)
  return _s;
}
inline const std::string& ChangeSettings_request::_internal_name() const {
  return name_.Get();
}
inline void ChangeSettings_request::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ChangeSettings_request::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ChangeSettings_request::release_name() {
  // @@protoc_insertion_point(field_release:calculator.ChangeSettings_request.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ChangeSettings_request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:calculator.ChangeSettings_request.name)
}

// int32 identifier = 2;
inline void ChangeSettings_request::clear_identifier() {
  identifier_ = 0;
}
inline int32_t ChangeSettings_request::_internal_identifier() const {
  return identifier_;
}
inline int32_t ChangeSettings_request::identifier() const {
  // @@protoc_insertion_point(field_get:calculator.ChangeSettings_request.identifier)
  return _internal_identifier();
}
inline void ChangeSettings_request::_internal_set_identifier(int32_t value) {
  
  identifier_ = value;
}
inline void ChangeSettings_request::set_identifier(int32_t value) {
  _internal_set_identifier(value);
  // @@protoc_insertion_point(field_set:calculator.ChangeSettings_request.identifier)
}

// repeated .calculator.ChangeSettings_request.Options options = 3;
inline int ChangeSettings_request::_internal_options_size() const {
  return options_.size();
}
inline int ChangeSettings_request::options_size() const {
  return _internal_options_size();
}
inline void ChangeSettings_request::clear_options() {
  options_.Clear();
}
inline ::calculator::ChangeSettings_request_Options* ChangeSettings_request::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:calculator.ChangeSettings_request.options)
  return options_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ChangeSettings_request_Options >*
ChangeSettings_request::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:calculator.ChangeSettings_request.options)
  return &options_;
}
inline const ::calculator::ChangeSettings_request_Options& ChangeSettings_request::_internal_options(int index) const {
  return options_.Get(index);
}
inline const ::calculator::ChangeSettings_request_Options& ChangeSettings_request::options(int index) const {
  // @@protoc_insertion_point(field_get:calculator.ChangeSettings_request.options)
  return _internal_options(index);
}
inline ::calculator::ChangeSettings_request_Options* ChangeSettings_request::_internal_add_options() {
  return options_.Add();
}
inline ::calculator::ChangeSettings_request_Options* ChangeSettings_request::add_options() {
  ::calculator::ChangeSettings_request_Options* _add = _internal_add_options();
  // @@protoc_insertion_point(field_add:calculator.ChangeSettings_request.options)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ChangeSettings_request_Options >&
ChangeSettings_request::options() const {
  // @@protoc_insertion_point(field_list:calculator.ChangeSettings_request.options)
  return options_;
}

// -------------------------------------------------------------------

// DoMath_request

// float a = 1;
inline void DoMath_request::clear_a() {
  a_ = 0;
}
inline float DoMath_request::_internal_a() const {
  return a_;
}
inline float DoMath_request::a() const {
  // @@protoc_insertion_point(field_get:calculator.DoMath_request.a)
  return _internal_a();
}
inline void DoMath_request::_internal_set_a(float value) {
  
  a_ = value;
}
inline void DoMath_request::set_a(float value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:calculator.DoMath_request.a)
}

// float b = 2;
inline void DoMath_request::clear_b() {
  b_ = 0;
}
inline float DoMath_request::_internal_b() const {
  return b_;
}
inline float DoMath_request::b() const {
  // @@protoc_insertion_point(field_get:calculator.DoMath_request.b)
  return _internal_b();
}
inline void DoMath_request::_internal_set_b(float value) {
  
  b_ = value;
}
inline void DoMath_request::set_b(float value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:calculator.DoMath_request.b)
}

// string operator = 3;
inline void DoMath_request::clear_operator_() {
  operator__.ClearToEmpty();
}
inline const std::string& DoMath_request::operator_() const {
  // @@protoc_insertion_point(field_get:calculator.DoMath_request.operator)
  return _internal_operator_();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DoMath_request::set_operator_(ArgT0&& arg0, ArgT... args) {
 
 operator__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:calculator.DoMath_request.operator)
}
inline std::string* DoMath_request::mutable_operator_() {
  std::string* _s = _internal_mutable_operator_();
  // @@protoc_insertion_point(field_mutable:calculator.DoMath_request.operator)
  return _s;
}
inline const std::string& DoMath_request::_internal_operator_() const {
  return operator__.Get();
}
inline void DoMath_request::_internal_set_operator_(const std::string& value) {
  
  operator__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* DoMath_request::_internal_mutable_operator_() {
  
  return operator__.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* DoMath_request::release_operator_() {
  // @@protoc_insertion_point(field_release:calculator.DoMath_request.operator)
  return operator__.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void DoMath_request::set_allocated_operator_(std::string* operator_) {
  if (operator_ != nullptr) {
    
  } else {
    
  }
  operator__.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), operator_,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (operator__.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    operator__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:calculator.DoMath_request.operator)
}

// -------------------------------------------------------------------

// DoMath_response

// float message = 1;
inline void DoMath_response::clear_message() {
  message_ = 0;
}
inline float DoMath_response::_internal_message() const {
  return message_;
}
inline float DoMath_response::message() const {
  // @@protoc_insertion_point(field_get:calculator.DoMath_response.message)
  return _internal_message();
}
inline void DoMath_response::_internal_set_message(float value) {
  
  message_ = value;
}
inline void DoMath_response::set_message(float value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:calculator.DoMath_response.message)
}

// -------------------------------------------------------------------

// ListToDict_request

// repeated string seq_k_str = 1;
inline int ListToDict_request::_internal_seq_k_str_size() const {
  return seq_k_str_.size();
}
inline int ListToDict_request::seq_k_str_size() const {
  return _internal_seq_k_str_size();
}
inline void ListToDict_request::clear_seq_k_str() {
  seq_k_str_.Clear();
}
inline std::string* ListToDict_request::add_seq_k_str() {
  std::string* _s = _internal_add_seq_k_str();
  // @@protoc_insertion_point(field_add_mutable:calculator.ListToDict_request.seq_k_str)
  return _s;
}
inline const std::string& ListToDict_request::_internal_seq_k_str(int index) const {
  return seq_k_str_.Get(index);
}
inline const std::string& ListToDict_request::seq_k_str(int index) const {
  // @@protoc_insertion_point(field_get:calculator.ListToDict_request.seq_k_str)
  return _internal_seq_k_str(index);
}
inline std::string* ListToDict_request::mutable_seq_k_str(int index) {
  // @@protoc_insertion_point(field_mutable:calculator.ListToDict_request.seq_k_str)
  return seq_k_str_.Mutable(index);
}
inline void ListToDict_request::set_seq_k_str(int index, const std::string& value) {
  seq_k_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:calculator.ListToDict_request.seq_k_str)
}
inline void ListToDict_request::set_seq_k_str(int index, std::string&& value) {
  seq_k_str_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:calculator.ListToDict_request.seq_k_str)
}
inline void ListToDict_request::set_seq_k_str(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  seq_k_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:calculator.ListToDict_request.seq_k_str)
}
inline void ListToDict_request::set_seq_k_str(int index, const char* value, size_t size) {
  seq_k_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:calculator.ListToDict_request.seq_k_str)
}
inline std::string* ListToDict_request::_internal_add_seq_k_str() {
  return seq_k_str_.Add();
}
inline void ListToDict_request::add_seq_k_str(const std::string& value) {
  seq_k_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:calculator.ListToDict_request.seq_k_str)
}
inline void ListToDict_request::add_seq_k_str(std::string&& value) {
  seq_k_str_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:calculator.ListToDict_request.seq_k_str)
}
inline void ListToDict_request::add_seq_k_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  seq_k_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:calculator.ListToDict_request.seq_k_str)
}
inline void ListToDict_request::add_seq_k_str(const char* value, size_t size) {
  seq_k_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:calculator.ListToDict_request.seq_k_str)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ListToDict_request::seq_k_str() const {
  // @@protoc_insertion_point(field_list:calculator.ListToDict_request.seq_k_str)
  return seq_k_str_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ListToDict_request::mutable_seq_k_str() {
  // @@protoc_insertion_point(field_mutable_list:calculator.ListToDict_request.seq_k_str)
  return &seq_k_str_;
}

// repeated int32 seq_v_int = 2;
inline int ListToDict_request::_internal_seq_v_int_size() const {
  return seq_v_int_.size();
}
inline int ListToDict_request::seq_v_int_size() const {
  return _internal_seq_v_int_size();
}
inline void ListToDict_request::clear_seq_v_int() {
  seq_v_int_.Clear();
}
inline int32_t ListToDict_request::_internal_seq_v_int(int index) const {
  return seq_v_int_.Get(index);
}
inline int32_t ListToDict_request::seq_v_int(int index) const {
  // @@protoc_insertion_point(field_get:calculator.ListToDict_request.seq_v_int)
  return _internal_seq_v_int(index);
}
inline void ListToDict_request::set_seq_v_int(int index, int32_t value) {
  seq_v_int_.Set(index, value);
  // @@protoc_insertion_point(field_set:calculator.ListToDict_request.seq_v_int)
}
inline void ListToDict_request::_internal_add_seq_v_int(int32_t value) {
  seq_v_int_.Add(value);
}
inline void ListToDict_request::add_seq_v_int(int32_t value) {
  _internal_add_seq_v_int(value);
  // @@protoc_insertion_point(field_add:calculator.ListToDict_request.seq_v_int)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ListToDict_request::_internal_seq_v_int() const {
  return seq_v_int_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ListToDict_request::seq_v_int() const {
  // @@protoc_insertion_point(field_list:calculator.ListToDict_request.seq_v_int)
  return _internal_seq_v_int();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ListToDict_request::_internal_mutable_seq_v_int() {
  return &seq_v_int_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ListToDict_request::mutable_seq_v_int() {
  // @@protoc_insertion_point(field_mutable_list:calculator.ListToDict_request.seq_v_int)
  return _internal_mutable_seq_v_int();
}

// -------------------------------------------------------------------

// ListToDict_response_DictMes

// repeated string k = 1;
inline int ListToDict_response_DictMes::_internal_k_size() const {
  return k_.size();
}
inline int ListToDict_response_DictMes::k_size() const {
  return _internal_k_size();
}
inline void ListToDict_response_DictMes::clear_k() {
  k_.Clear();
}
inline std::string* ListToDict_response_DictMes::add_k() {
  std::string* _s = _internal_add_k();
  // @@protoc_insertion_point(field_add_mutable:calculator.ListToDict_response.DictMes.k)
  return _s;
}
inline const std::string& ListToDict_response_DictMes::_internal_k(int index) const {
  return k_.Get(index);
}
inline const std::string& ListToDict_response_DictMes::k(int index) const {
  // @@protoc_insertion_point(field_get:calculator.ListToDict_response.DictMes.k)
  return _internal_k(index);
}
inline std::string* ListToDict_response_DictMes::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:calculator.ListToDict_response.DictMes.k)
  return k_.Mutable(index);
}
inline void ListToDict_response_DictMes::set_k(int index, const std::string& value) {
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:calculator.ListToDict_response.DictMes.k)
}
inline void ListToDict_response_DictMes::set_k(int index, std::string&& value) {
  k_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:calculator.ListToDict_response.DictMes.k)
}
inline void ListToDict_response_DictMes::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:calculator.ListToDict_response.DictMes.k)
}
inline void ListToDict_response_DictMes::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:calculator.ListToDict_response.DictMes.k)
}
inline std::string* ListToDict_response_DictMes::_internal_add_k() {
  return k_.Add();
}
inline void ListToDict_response_DictMes::add_k(const std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:calculator.ListToDict_response.DictMes.k)
}
inline void ListToDict_response_DictMes::add_k(std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:calculator.ListToDict_response.DictMes.k)
}
inline void ListToDict_response_DictMes::add_k(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:calculator.ListToDict_response.DictMes.k)
}
inline void ListToDict_response_DictMes::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:calculator.ListToDict_response.DictMes.k)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ListToDict_response_DictMes::k() const {
  // @@protoc_insertion_point(field_list:calculator.ListToDict_response.DictMes.k)
  return k_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ListToDict_response_DictMes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:calculator.ListToDict_response.DictMes.k)
  return &k_;
}

// repeated int32 v = 2;
inline int ListToDict_response_DictMes::_internal_v_size() const {
  return v_.size();
}
inline int ListToDict_response_DictMes::v_size() const {
  return _internal_v_size();
}
inline void ListToDict_response_DictMes::clear_v() {
  v_.Clear();
}
inline int32_t ListToDict_response_DictMes::_internal_v(int index) const {
  return v_.Get(index);
}
inline int32_t ListToDict_response_DictMes::v(int index) const {
  // @@protoc_insertion_point(field_get:calculator.ListToDict_response.DictMes.v)
  return _internal_v(index);
}
inline void ListToDict_response_DictMes::set_v(int index, int32_t value) {
  v_.Set(index, value);
  // @@protoc_insertion_point(field_set:calculator.ListToDict_response.DictMes.v)
}
inline void ListToDict_response_DictMes::_internal_add_v(int32_t value) {
  v_.Add(value);
}
inline void ListToDict_response_DictMes::add_v(int32_t value) {
  _internal_add_v(value);
  // @@protoc_insertion_point(field_add:calculator.ListToDict_response.DictMes.v)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ListToDict_response_DictMes::_internal_v() const {
  return v_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
ListToDict_response_DictMes::v() const {
  // @@protoc_insertion_point(field_list:calculator.ListToDict_response.DictMes.v)
  return _internal_v();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ListToDict_response_DictMes::_internal_mutable_v() {
  return &v_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
ListToDict_response_DictMes::mutable_v() {
  // @@protoc_insertion_point(field_mutable_list:calculator.ListToDict_response.DictMes.v)
  return _internal_mutable_v();
}

// -------------------------------------------------------------------

// ListToDict_response

// repeated .calculator.ListToDict_response.DictMes message = 1;
inline int ListToDict_response::_internal_message_size() const {
  return message_.size();
}
inline int ListToDict_response::message_size() const {
  return _internal_message_size();
}
inline void ListToDict_response::clear_message() {
  message_.Clear();
}
inline ::calculator::ListToDict_response_DictMes* ListToDict_response::mutable_message(int index) {
  // @@protoc_insertion_point(field_mutable:calculator.ListToDict_response.message)
  return message_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ListToDict_response_DictMes >*
ListToDict_response::mutable_message() {
  // @@protoc_insertion_point(field_mutable_list:calculator.ListToDict_response.message)
  return &message_;
}
inline const ::calculator::ListToDict_response_DictMes& ListToDict_response::_internal_message(int index) const {
  return message_.Get(index);
}
inline const ::calculator::ListToDict_response_DictMes& ListToDict_response::message(int index) const {
  // @@protoc_insertion_point(field_get:calculator.ListToDict_response.message)
  return _internal_message(index);
}
inline ::calculator::ListToDict_response_DictMes* ListToDict_response::_internal_add_message() {
  return message_.Add();
}
inline ::calculator::ListToDict_response_DictMes* ListToDict_response::add_message() {
  ::calculator::ListToDict_response_DictMes* _add = _internal_add_message();
  // @@protoc_insertion_point(field_add:calculator.ListToDict_response.message)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::ListToDict_response_DictMes >&
ListToDict_response::message() const {
  // @@protoc_insertion_point(field_list:calculator.ListToDict_response.message)
  return message_;
}

// -------------------------------------------------------------------

// DictToList_request_DictMes

// string k = 1;
inline void DictToList_request_DictMes::clear_k() {
  k_.ClearToEmpty();
}
inline const std::string& DictToList_request_DictMes::k() const {
  // @@protoc_insertion_point(field_get:calculator.DictToList_request.DictMes.k)
  return _internal_k();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DictToList_request_DictMes::set_k(ArgT0&& arg0, ArgT... args) {
 
 k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:calculator.DictToList_request.DictMes.k)
}
inline std::string* DictToList_request_DictMes::mutable_k() {
  std::string* _s = _internal_mutable_k();
  // @@protoc_insertion_point(field_mutable:calculator.DictToList_request.DictMes.k)
  return _s;
}
inline const std::string& DictToList_request_DictMes::_internal_k() const {
  return k_.Get();
}
inline void DictToList_request_DictMes::_internal_set_k(const std::string& value) {
  
  k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* DictToList_request_DictMes::_internal_mutable_k() {
  
  return k_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* DictToList_request_DictMes::release_k() {
  // @@protoc_insertion_point(field_release:calculator.DictToList_request.DictMes.k)
  return k_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void DictToList_request_DictMes::set_allocated_k(std::string* k) {
  if (k != nullptr) {
    
  } else {
    
  }
  k_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), k,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (k_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    k_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:calculator.DictToList_request.DictMes.k)
}

// repeated int32 v = 2;
inline int DictToList_request_DictMes::_internal_v_size() const {
  return v_.size();
}
inline int DictToList_request_DictMes::v_size() const {
  return _internal_v_size();
}
inline void DictToList_request_DictMes::clear_v() {
  v_.Clear();
}
inline int32_t DictToList_request_DictMes::_internal_v(int index) const {
  return v_.Get(index);
}
inline int32_t DictToList_request_DictMes::v(int index) const {
  // @@protoc_insertion_point(field_get:calculator.DictToList_request.DictMes.v)
  return _internal_v(index);
}
inline void DictToList_request_DictMes::set_v(int index, int32_t value) {
  v_.Set(index, value);
  // @@protoc_insertion_point(field_set:calculator.DictToList_request.DictMes.v)
}
inline void DictToList_request_DictMes::_internal_add_v(int32_t value) {
  v_.Add(value);
}
inline void DictToList_request_DictMes::add_v(int32_t value) {
  _internal_add_v(value);
  // @@protoc_insertion_point(field_add:calculator.DictToList_request.DictMes.v)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
DictToList_request_DictMes::_internal_v() const {
  return v_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
DictToList_request_DictMes::v() const {
  // @@protoc_insertion_point(field_list:calculator.DictToList_request.DictMes.v)
  return _internal_v();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
DictToList_request_DictMes::_internal_mutable_v() {
  return &v_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
DictToList_request_DictMes::mutable_v() {
  // @@protoc_insertion_point(field_mutable_list:calculator.DictToList_request.DictMes.v)
  return _internal_mutable_v();
}

// -------------------------------------------------------------------

// DictToList_request

// repeated .calculator.DictToList_request.DictMes dict_smpl = 1;
inline int DictToList_request::_internal_dict_smpl_size() const {
  return dict_smpl_.size();
}
inline int DictToList_request::dict_smpl_size() const {
  return _internal_dict_smpl_size();
}
inline void DictToList_request::clear_dict_smpl() {
  dict_smpl_.Clear();
}
inline ::calculator::DictToList_request_DictMes* DictToList_request::mutable_dict_smpl(int index) {
  // @@protoc_insertion_point(field_mutable:calculator.DictToList_request.dict_smpl)
  return dict_smpl_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_request_DictMes >*
DictToList_request::mutable_dict_smpl() {
  // @@protoc_insertion_point(field_mutable_list:calculator.DictToList_request.dict_smpl)
  return &dict_smpl_;
}
inline const ::calculator::DictToList_request_DictMes& DictToList_request::_internal_dict_smpl(int index) const {
  return dict_smpl_.Get(index);
}
inline const ::calculator::DictToList_request_DictMes& DictToList_request::dict_smpl(int index) const {
  // @@protoc_insertion_point(field_get:calculator.DictToList_request.dict_smpl)
  return _internal_dict_smpl(index);
}
inline ::calculator::DictToList_request_DictMes* DictToList_request::_internal_add_dict_smpl() {
  return dict_smpl_.Add();
}
inline ::calculator::DictToList_request_DictMes* DictToList_request::add_dict_smpl() {
  ::calculator::DictToList_request_DictMes* _add = _internal_add_dict_smpl();
  // @@protoc_insertion_point(field_add:calculator.DictToList_request.dict_smpl)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_request_DictMes >&
DictToList_request::dict_smpl() const {
  // @@protoc_insertion_point(field_list:calculator.DictToList_request.dict_smpl)
  return dict_smpl_;
}

// -------------------------------------------------------------------

// DictToList_response_DictMes

// string k = 1;
inline void DictToList_response_DictMes::clear_k() {
  k_.ClearToEmpty();
}
inline const std::string& DictToList_response_DictMes::k() const {
  // @@protoc_insertion_point(field_get:calculator.DictToList_response.DictMes.k)
  return _internal_k();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DictToList_response_DictMes::set_k(ArgT0&& arg0, ArgT... args) {
 
 k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:calculator.DictToList_response.DictMes.k)
}
inline std::string* DictToList_response_DictMes::mutable_k() {
  std::string* _s = _internal_mutable_k();
  // @@protoc_insertion_point(field_mutable:calculator.DictToList_response.DictMes.k)
  return _s;
}
inline const std::string& DictToList_response_DictMes::_internal_k() const {
  return k_.Get();
}
inline void DictToList_response_DictMes::_internal_set_k(const std::string& value) {
  
  k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* DictToList_response_DictMes::_internal_mutable_k() {
  
  return k_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* DictToList_response_DictMes::release_k() {
  // @@protoc_insertion_point(field_release:calculator.DictToList_response.DictMes.k)
  return k_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void DictToList_response_DictMes::set_allocated_k(std::string* k) {
  if (k != nullptr) {
    
  } else {
    
  }
  k_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), k,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (k_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    k_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:calculator.DictToList_response.DictMes.k)
}

// repeated int32 v = 2;
inline int DictToList_response_DictMes::_internal_v_size() const {
  return v_.size();
}
inline int DictToList_response_DictMes::v_size() const {
  return _internal_v_size();
}
inline void DictToList_response_DictMes::clear_v() {
  v_.Clear();
}
inline int32_t DictToList_response_DictMes::_internal_v(int index) const {
  return v_.Get(index);
}
inline int32_t DictToList_response_DictMes::v(int index) const {
  // @@protoc_insertion_point(field_get:calculator.DictToList_response.DictMes.v)
  return _internal_v(index);
}
inline void DictToList_response_DictMes::set_v(int index, int32_t value) {
  v_.Set(index, value);
  // @@protoc_insertion_point(field_set:calculator.DictToList_response.DictMes.v)
}
inline void DictToList_response_DictMes::_internal_add_v(int32_t value) {
  v_.Add(value);
}
inline void DictToList_response_DictMes::add_v(int32_t value) {
  _internal_add_v(value);
  // @@protoc_insertion_point(field_add:calculator.DictToList_response.DictMes.v)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
DictToList_response_DictMes::_internal_v() const {
  return v_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
DictToList_response_DictMes::v() const {
  // @@protoc_insertion_point(field_list:calculator.DictToList_response.DictMes.v)
  return _internal_v();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
DictToList_response_DictMes::_internal_mutable_v() {
  return &v_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
DictToList_response_DictMes::mutable_v() {
  // @@protoc_insertion_point(field_mutable_list:calculator.DictToList_response.DictMes.v)
  return _internal_mutable_v();
}

// -------------------------------------------------------------------

// DictToList_response

// repeated .calculator.DictToList_response.DictMes message = 1;
inline int DictToList_response::_internal_message_size() const {
  return message_.size();
}
inline int DictToList_response::message_size() const {
  return _internal_message_size();
}
inline void DictToList_response::clear_message() {
  message_.Clear();
}
inline ::calculator::DictToList_response_DictMes* DictToList_response::mutable_message(int index) {
  // @@protoc_insertion_point(field_mutable:calculator.DictToList_response.message)
  return message_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_response_DictMes >*
DictToList_response::mutable_message() {
  // @@protoc_insertion_point(field_mutable_list:calculator.DictToList_response.message)
  return &message_;
}
inline const ::calculator::DictToList_response_DictMes& DictToList_response::_internal_message(int index) const {
  return message_.Get(index);
}
inline const ::calculator::DictToList_response_DictMes& DictToList_response::message(int index) const {
  // @@protoc_insertion_point(field_get:calculator.DictToList_response.message)
  return _internal_message(index);
}
inline ::calculator::DictToList_response_DictMes* DictToList_response::_internal_add_message() {
  return message_.Add();
}
inline ::calculator::DictToList_response_DictMes* DictToList_response::add_message() {
  ::calculator::DictToList_response_DictMes* _add = _internal_add_message();
  // @@protoc_insertion_point(field_add:calculator.DictToList_response.message)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::calculator::DictToList_response_DictMes >&
DictToList_response::message() const {
  // @@protoc_insertion_point(field_list:calculator.DictToList_response.message)
  return message_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace calculator

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto
